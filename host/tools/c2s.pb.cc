// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "c2s.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace c2s {

namespace {

const ::google::protobuf::Descriptor* package_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  package_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* package_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* account_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  account_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* account_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  account_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* enter_room_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  enter_room_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* enter_room_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  enter_room_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ready_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ready_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* ready_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ready_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* mp_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mp_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* mp_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mp_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* am_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  am_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* am_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  am_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* rob_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rob_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* rob_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rob_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* lead_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  lead_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* lead_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  lead_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* lead_rsp_settlement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  lead_rsp_settlement_reflection_ = NULL;
const ::google::protobuf::Descriptor* logout_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  logout_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* logout_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  logout_rsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* deal_cards_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deal_cards_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* deal_cards_rsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  deal_cards_rsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_c2s_2eproto() {
  protobuf_AddDesc_c2s_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "c2s.proto");
  GOOGLE_CHECK(file != NULL);
  package_descriptor_ = file->message_type(0);
  static const int package_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(package, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(package, session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(package, tag_),
  };
  package_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      package_descriptor_,
      package::default_instance_,
      package_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(package, _has_bits_[0]),
      -1,
      -1,
      sizeof(package),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(package, _internal_metadata_),
      -1);
  package_Type_descriptor_ = package_descriptor_->enum_type(0);
  account_req_descriptor_ = file->message_type(1);
  static const int account_req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_req, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_req, password_),
  };
  account_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      account_req_descriptor_,
      account_req::default_instance_,
      account_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(account_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_req, _internal_metadata_),
      -1);
  account_rsp_descriptor_ = file->message_type(2);
  static const int account_rsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_rsp, msg_),
  };
  account_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      account_rsp_descriptor_,
      account_rsp::default_instance_,
      account_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(account_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(account_rsp, _internal_metadata_),
      -1);
  enter_room_req_descriptor_ = file->message_type(3);
  static const int enter_room_req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_req, rule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_req, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_req, scene_),
  };
  enter_room_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      enter_room_req_descriptor_,
      enter_room_req::default_instance_,
      enter_room_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(enter_room_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_req, _internal_metadata_),
      -1);
  enter_room_rsp_descriptor_ = file->message_type(4);
  static const int enter_room_rsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_rsp, msg_),
  };
  enter_room_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      enter_room_rsp_descriptor_,
      enter_room_rsp::default_instance_,
      enter_room_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(enter_room_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(enter_room_rsp, _internal_metadata_),
      -1);
  ready_req_descriptor_ = file->message_type(5);
  static const int ready_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_req, ready_),
  };
  ready_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ready_req_descriptor_,
      ready_req::default_instance_,
      ready_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(ready_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_req, _internal_metadata_),
      -1);
  ready_rsp_descriptor_ = file->message_type(6);
  static const int ready_rsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, mcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, rcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, lcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, dcards_),
  };
  ready_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ready_rsp_descriptor_,
      ready_rsp::default_instance_,
      ready_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ready_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ready_rsp, _internal_metadata_),
      -1);
  mp_req_descriptor_ = file->message_type(7);
  static const int mp_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_req, m_),
  };
  mp_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mp_req_descriptor_,
      mp_req::default_instance_,
      mp_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(mp_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_req, _internal_metadata_),
      -1);
  mp_rsp_descriptor_ = file->message_type(8);
  static const int mp_rsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, m_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, mcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, rcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, lcards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, dcards_),
  };
  mp_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mp_rsp_descriptor_,
      mp_rsp::default_instance_,
      mp_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(mp_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mp_rsp, _internal_metadata_),
      -1);
  am_req_descriptor_ = file->message_type(9);
  static const int am_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_req, m_),
  };
  am_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      am_req_descriptor_,
      am_req::default_instance_,
      am_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(am_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_req, _internal_metadata_),
      -1);
  am_rsp_descriptor_ = file->message_type(10);
  static const int am_rsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_rsp, msg_),
  };
  am_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      am_rsp_descriptor_,
      am_rsp::default_instance_,
      am_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(am_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(am_rsp, _internal_metadata_),
      -1);
  rob_req_descriptor_ = file->message_type(11);
  static const int rob_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_req, m_),
  };
  rob_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rob_req_descriptor_,
      rob_req::default_instance_,
      rob_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(rob_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_req, _internal_metadata_),
      -1);
  rob_rsp_descriptor_ = file->message_type(12);
  static const int rob_rsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, your_turn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, countdown_),
  };
  rob_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rob_rsp_descriptor_,
      rob_rsp::default_instance_,
      rob_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(rob_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rob_rsp, _internal_metadata_),
      -1);
  lead_req_descriptor_ = file->message_type(13);
  static const int lead_req_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_req, cards_),
  };
  lead_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      lead_req_descriptor_,
      lead_req::default_instance_,
      lead_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(lead_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_req, _internal_metadata_),
      -1);
  lead_rsp_descriptor_ = file->message_type(14);
  static const int lead_rsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, your_turn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, countdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, me_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, right_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, left_),
  };
  lead_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      lead_rsp_descriptor_,
      lead_rsp::default_instance_,
      lead_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(lead_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp, _internal_metadata_),
      -1);
  lead_rsp_settlement_descriptor_ = lead_rsp_descriptor_->nested_type(0);
  static const int lead_rsp_settlement_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp_settlement, gold_),
  };
  lead_rsp_settlement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      lead_rsp_settlement_descriptor_,
      lead_rsp_settlement::default_instance_,
      lead_rsp_settlement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp_settlement, _has_bits_[0]),
      -1,
      -1,
      sizeof(lead_rsp_settlement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(lead_rsp_settlement, _internal_metadata_),
      -1);
  logout_req_descriptor_ = file->message_type(15);
  static const int logout_req_offsets_[1] = {
  };
  logout_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      logout_req_descriptor_,
      logout_req::default_instance_,
      logout_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(logout_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_req, _internal_metadata_),
      -1);
  logout_rsp_descriptor_ = file->message_type(16);
  static const int logout_rsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_rsp, msg_),
  };
  logout_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      logout_rsp_descriptor_,
      logout_rsp::default_instance_,
      logout_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(logout_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(logout_rsp, _internal_metadata_),
      -1);
  deal_cards_req_descriptor_ = file->message_type(17);
  static const int deal_cards_req_offsets_[1] = {
  };
  deal_cards_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      deal_cards_req_descriptor_,
      deal_cards_req::default_instance_,
      deal_cards_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_req, _has_bits_[0]),
      -1,
      -1,
      sizeof(deal_cards_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_req, _internal_metadata_),
      -1);
  deal_cards_rsp_descriptor_ = file->message_type(18);
  static const int deal_cards_rsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, your_turn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, countdown_),
  };
  deal_cards_rsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      deal_cards_rsp_descriptor_,
      deal_cards_rsp::default_instance_,
      deal_cards_rsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(deal_cards_rsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(deal_cards_rsp, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_c2s_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      package_descriptor_, &package::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      account_req_descriptor_, &account_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      account_rsp_descriptor_, &account_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      enter_room_req_descriptor_, &enter_room_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      enter_room_rsp_descriptor_, &enter_room_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ready_req_descriptor_, &ready_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ready_rsp_descriptor_, &ready_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mp_req_descriptor_, &mp_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mp_rsp_descriptor_, &mp_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      am_req_descriptor_, &am_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      am_rsp_descriptor_, &am_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rob_req_descriptor_, &rob_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rob_rsp_descriptor_, &rob_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      lead_req_descriptor_, &lead_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      lead_rsp_descriptor_, &lead_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      lead_rsp_settlement_descriptor_, &lead_rsp_settlement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      logout_req_descriptor_, &logout_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      logout_rsp_descriptor_, &logout_rsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      deal_cards_req_descriptor_, &deal_cards_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      deal_cards_rsp_descriptor_, &deal_cards_rsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_c2s_2eproto() {
  delete package::default_instance_;
  delete package_reflection_;
  delete account_req::default_instance_;
  delete account_req_reflection_;
  delete account_rsp::default_instance_;
  delete account_rsp_reflection_;
  delete enter_room_req::default_instance_;
  delete enter_room_req_reflection_;
  delete enter_room_rsp::default_instance_;
  delete enter_room_rsp_reflection_;
  delete ready_req::default_instance_;
  delete ready_req_reflection_;
  delete ready_rsp::default_instance_;
  delete ready_rsp_reflection_;
  delete mp_req::default_instance_;
  delete mp_req_reflection_;
  delete mp_rsp::default_instance_;
  delete mp_rsp_reflection_;
  delete am_req::default_instance_;
  delete am_req_reflection_;
  delete am_rsp::default_instance_;
  delete am_rsp_reflection_;
  delete rob_req::default_instance_;
  delete rob_req_reflection_;
  delete rob_rsp::default_instance_;
  delete rob_rsp_reflection_;
  delete lead_req::default_instance_;
  delete lead_req_reflection_;
  delete lead_rsp::default_instance_;
  delete lead_rsp_reflection_;
  delete lead_rsp_settlement::default_instance_;
  delete lead_rsp_settlement_reflection_;
  delete logout_req::default_instance_;
  delete logout_req_reflection_;
  delete logout_rsp::default_instance_;
  delete logout_rsp_reflection_;
  delete deal_cards_req::default_instance_;
  delete deal_cards_req_reflection_;
  delete deal_cards_rsp::default_instance_;
  delete deal_cards_rsp_reflection_;
}

void protobuf_AddDesc_c2s_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tc2s.proto\022\003c2s\"k\n\007package\022\037\n\004type\030\001 \002("
    "\0162\021.c2s.package.Type\022\017\n\007session\030\002 \002(\005\022\013\n"
    "\003tag\030\003 \002(\t\"!\n\004Type\022\013\n\007REQUEST\020\000\022\014\n\010RESPO"
    "NSE\020\001\"0\n\013account_req\022\017\n\007account\030\001 \002(\t\022\020\n"
    "\010password\030\002 \002(\t\"-\n\013account_rsp\022\021\n\terrorc"
    "ode\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\";\n\016enter_room_req"
    "\022\014\n\004rule\030\001 \002(\005\022\014\n\004mode\030\002 \002(\005\022\r\n\005scene\030\003 "
    "\002(\005\"0\n\016enter_room_rsp\022\021\n\terrorcode\030\001 \002(\005"
    "\022\013\n\003msg\030\002 \002(\t\"\032\n\tready_req\022\r\n\005ready\030\001 \002("
    "\005\"|\n\tready_rsp\022\021\n\terrorcode\030\001 \002(\005\022\013\n\003msg"
    "\030\002 \002(\t\022\017\n\007user_id\030\003 \002(\005\022\016\n\006mcards\030\004 \003(\005\022"
    "\016\n\006rcards\030\005 \003(\005\022\016\n\006lcards\030\006 \003(\005\022\016\n\006dcard"
    "s\030\007 \003(\005\"\023\n\006mp_req\022\t\n\001m\030\001 \002(\005\"s\n\006mp_rsp\022\021"
    "\n\terrorcode\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\t\n\001m\030\003 \002("
    "\005\022\016\n\006mcards\030\004 \003(\005\022\016\n\006rcards\030\005 \003(\005\022\016\n\006lca"
    "rds\030\006 \003(\005\022\016\n\006dcards\030\007 \003(\005\"\023\n\006am_req\022\t\n\001m"
    "\030\001 \002(\005\"(\n\006am_rsp\022\021\n\terrorcode\030\001 \002(\005\022\013\n\003m"
    "sg\030\002 \002(\t\"\024\n\007rob_req\022\t\n\001m\030\001 \002(\005\"O\n\007rob_rs"
    "p\022\021\n\terrorcode\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\021\n\tyou"
    "r_turn\030\003 \002(\005\022\021\n\tcountdown\030\004 \002(\005\"\031\n\010lead_"
    "req\022\r\n\005cards\030\001 \003(\005\"\343\001\n\010lead_rsp\022\021\n\terror"
    "code\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\022\021\n\tyour_turn\030\003 \002"
    "(\005\022\021\n\tcountdown\030\004 \002(\005\022$\n\002me\030\005 \001(\0132\030.c2s."
    "lead_rsp.settlement\022\'\n\005right\030\006 \001(\0132\030.c2s"
    ".lead_rsp.settlement\022&\n\004left\030\007 \001(\0132\030.c2s"
    ".lead_rsp.settlement\032\032\n\nsettlement\022\014\n\004go"
    "ld\030\001 \002(\005\"\014\n\nlogout_req\",\n\nlogout_rsp\022\021\n\t"
    "errorcode\030\001 \002(\005\022\013\n\003msg\030\002 \002(\t\"\020\n\016deal_car"
    "ds_req\"V\n\016deal_cards_rsp\022\021\n\terrorcode\030\001 "
    "\002(\005\022\013\n\003msg\030\002 \002(\t\022\021\n\tyour_turn\030\003 \001(\005\022\021\n\tc"
    "ountdown\030\004 \001(\005", 1214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "c2s.proto", &protobuf_RegisterTypes);
  package::default_instance_ = new package();
  account_req::default_instance_ = new account_req();
  account_rsp::default_instance_ = new account_rsp();
  enter_room_req::default_instance_ = new enter_room_req();
  enter_room_rsp::default_instance_ = new enter_room_rsp();
  ready_req::default_instance_ = new ready_req();
  ready_rsp::default_instance_ = new ready_rsp();
  mp_req::default_instance_ = new mp_req();
  mp_rsp::default_instance_ = new mp_rsp();
  am_req::default_instance_ = new am_req();
  am_rsp::default_instance_ = new am_rsp();
  rob_req::default_instance_ = new rob_req();
  rob_rsp::default_instance_ = new rob_rsp();
  lead_req::default_instance_ = new lead_req();
  lead_rsp::default_instance_ = new lead_rsp();
  lead_rsp_settlement::default_instance_ = new lead_rsp_settlement();
  logout_req::default_instance_ = new logout_req();
  logout_rsp::default_instance_ = new logout_rsp();
  deal_cards_req::default_instance_ = new deal_cards_req();
  deal_cards_rsp::default_instance_ = new deal_cards_rsp();
  package::default_instance_->InitAsDefaultInstance();
  account_req::default_instance_->InitAsDefaultInstance();
  account_rsp::default_instance_->InitAsDefaultInstance();
  enter_room_req::default_instance_->InitAsDefaultInstance();
  enter_room_rsp::default_instance_->InitAsDefaultInstance();
  ready_req::default_instance_->InitAsDefaultInstance();
  ready_rsp::default_instance_->InitAsDefaultInstance();
  mp_req::default_instance_->InitAsDefaultInstance();
  mp_rsp::default_instance_->InitAsDefaultInstance();
  am_req::default_instance_->InitAsDefaultInstance();
  am_rsp::default_instance_->InitAsDefaultInstance();
  rob_req::default_instance_->InitAsDefaultInstance();
  rob_rsp::default_instance_->InitAsDefaultInstance();
  lead_req::default_instance_->InitAsDefaultInstance();
  lead_rsp::default_instance_->InitAsDefaultInstance();
  lead_rsp_settlement::default_instance_->InitAsDefaultInstance();
  logout_req::default_instance_->InitAsDefaultInstance();
  logout_rsp::default_instance_->InitAsDefaultInstance();
  deal_cards_req::default_instance_->InitAsDefaultInstance();
  deal_cards_rsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_c2s_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_c2s_2eproto {
  StaticDescriptorInitializer_c2s_2eproto() {
    protobuf_AddDesc_c2s_2eproto();
  }
} static_descriptor_initializer_c2s_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* package_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return package_Type_descriptor_;
}
bool package_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const package_Type package::REQUEST;
const package_Type package::RESPONSE;
const package_Type package::Type_MIN;
const package_Type package::Type_MAX;
const int package::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int package::kTypeFieldNumber;
const int package::kSessionFieldNumber;
const int package::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

package::package()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.package)
}

void package::InitAsDefaultInstance() {
}

package::package(const package& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.package)
}

void package::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  session_ = 0;
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

package::~package() {
  // @@protoc_insertion_point(destructor:c2s.package)
  SharedDtor();
}

void package::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void package::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* package::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return package_descriptor_;
}

const package& package::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

package* package::default_instance_ = NULL;

package* package::New(::google::protobuf::Arena* arena) const {
  package* n = new package;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void package::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<package*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(type_, session_);
    if (has_tag()) {
      tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool package::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.package)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .c2s.package.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::c2s::package_Type_IsValid(value)) {
            set_type(static_cast< ::c2s::package_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_session;
        break;
      }

      // required int32 session = 2;
      case 2: {
        if (tag == 16) {
         parse_session:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &session_)));
          set_has_session();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tag;
        break;
      }

      // required string tag = 3;
      case 3: {
        if (tag == 26) {
         parse_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.package.tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.package)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.package)
  return false;
#undef DO_
}

void package::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.package)
  // required .c2s.package.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 session = 2;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->session(), output);
  }

  // required string tag = 3;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.package.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.package)
}

::google::protobuf::uint8* package::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.package)
  // required .c2s.package.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 session = 2;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->session(), target);
  }

  // required string tag = 3;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.package.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.package)
  return target;
}

int package::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_type()) {
    // required .c2s.package.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_session()) {
    // required int32 session = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session());
  }

  if (has_tag()) {
    // required string tag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  return total_size;
}
int package::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .c2s.package.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required int32 session = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->session());

    // required string tag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void package::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const package* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const package>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void package::MergeFrom(const package& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
    if (from.has_tag()) {
      set_has_tag();
      tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void package::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void package::CopyFrom(const package& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool package::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void package::Swap(package* other) {
  if (other == this) return;
  InternalSwap(other);
}
void package::InternalSwap(package* other) {
  std::swap(type_, other->type_);
  std::swap(session_, other->session_);
  tag_.Swap(&other->tag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata package::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = package_descriptor_;
  metadata.reflection = package_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// package

// required .c2s.package.Type type = 1;
bool package::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void package::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void package::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void package::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::c2s::package_Type package::type() const {
  // @@protoc_insertion_point(field_get:c2s.package.type)
  return static_cast< ::c2s::package_Type >(type_);
}
 void package::set_type(::c2s::package_Type value) {
  assert(::c2s::package_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:c2s.package.type)
}

// required int32 session = 2;
bool package::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void package::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
void package::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
void package::clear_session() {
  session_ = 0;
  clear_has_session();
}
 ::google::protobuf::int32 package::session() const {
  // @@protoc_insertion_point(field_get:c2s.package.session)
  return session_;
}
 void package::set_session(::google::protobuf::int32 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:c2s.package.session)
}

// required string tag = 3;
bool package::has_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void package::set_has_tag() {
  _has_bits_[0] |= 0x00000004u;
}
void package::clear_has_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
void package::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
 const ::std::string& package::tag() const {
  // @@protoc_insertion_point(field_get:c2s.package.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void package::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.package.tag)
}
 void package::set_tag(const char* value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.package.tag)
}
 void package::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.package.tag)
}
 ::std::string* package::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:c2s.package.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* package::release_tag() {
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void package::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:c2s.package.tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int account_req::kAccountFieldNumber;
const int account_req::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

account_req::account_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.account_req)
}

void account_req::InitAsDefaultInstance() {
}

account_req::account_req(const account_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.account_req)
}

void account_req::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

account_req::~account_req() {
  // @@protoc_insertion_point(destructor:c2s.account_req)
  SharedDtor();
}

void account_req::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void account_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* account_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return account_req_descriptor_;
}

const account_req& account_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

account_req* account_req::default_instance_ = NULL;

account_req* account_req::New(::google::protobuf::Arena* arena) const {
  account_req* n = new account_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void account_req::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool account_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.account_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.account_req.account");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.account_req.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.account_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.account_req)
  return false;
#undef DO_
}

void account_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.account_req)
  // required string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_req.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_req.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.account_req)
}

::google::protobuf::uint8* account_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.account_req)
  // required string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_req.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_req.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.account_req)
  return target;
}

int account_req::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_account()) {
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
int account_req::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void account_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const account_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const account_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void account_req::MergeFrom(const account_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void account_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void account_req::CopyFrom(const account_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool account_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void account_req::Swap(account_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void account_req::InternalSwap(account_req* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata account_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = account_req_descriptor_;
  metadata.reflection = account_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// account_req

// required string account = 1;
bool account_req::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void account_req::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void account_req::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void account_req::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
 const ::std::string& account_req::account() const {
  // @@protoc_insertion_point(field_get:c2s.account_req.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_req::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_req.account)
}
 void account_req::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_req.account)
}
 void account_req::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_req.account)
}
 ::std::string* account_req::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:c2s.account_req.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* account_req::release_account() {
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_req::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_req.account)
}

// required string password = 2;
bool account_req::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void account_req::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void account_req::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void account_req::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& account_req::password() const {
  // @@protoc_insertion_point(field_get:c2s.account_req.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_req::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_req.password)
}
 void account_req::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_req.password)
}
 void account_req::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_req.password)
}
 ::std::string* account_req::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:c2s.account_req.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* account_req::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_req::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_req.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int account_rsp::kErrorcodeFieldNumber;
const int account_rsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

account_rsp::account_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.account_rsp)
}

void account_rsp::InitAsDefaultInstance() {
}

account_rsp::account_rsp(const account_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.account_rsp)
}

void account_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

account_rsp::~account_rsp() {
  // @@protoc_insertion_point(destructor:c2s.account_rsp)
  SharedDtor();
}

void account_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void account_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* account_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return account_rsp_descriptor_;
}

const account_rsp& account_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

account_rsp* account_rsp::default_instance_ = NULL;

account_rsp* account_rsp::New(::google::protobuf::Arena* arena) const {
  account_rsp* n = new account_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void account_rsp::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool account_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.account_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.account_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.account_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.account_rsp)
  return false;
#undef DO_
}

void account_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.account_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.account_rsp)
}

::google::protobuf::uint8* account_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.account_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.account_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.account_rsp)
  return target;
}

int account_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int account_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void account_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const account_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const account_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void account_rsp::MergeFrom(const account_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void account_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void account_rsp::CopyFrom(const account_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool account_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void account_rsp::Swap(account_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void account_rsp::InternalSwap(account_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata account_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = account_rsp_descriptor_;
  metadata.reflection = account_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// account_rsp

// required int32 errorcode = 1;
bool account_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void account_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void account_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void account_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 account_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.account_rsp.errorcode)
  return errorcode_;
}
 void account_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.account_rsp.errorcode)
}

// required string msg = 2;
bool account_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void account_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void account_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void account_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& account_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.account_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_rsp.msg)
}
 void account_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_rsp.msg)
}
 void account_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_rsp.msg)
}
 ::std::string* account_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.account_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* account_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void account_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_rsp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int enter_room_req::kRuleFieldNumber;
const int enter_room_req::kModeFieldNumber;
const int enter_room_req::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

enter_room_req::enter_room_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.enter_room_req)
}

void enter_room_req::InitAsDefaultInstance() {
}

enter_room_req::enter_room_req(const enter_room_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.enter_room_req)
}

void enter_room_req::SharedCtor() {
  _cached_size_ = 0;
  rule_ = 0;
  mode_ = 0;
  scene_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

enter_room_req::~enter_room_req() {
  // @@protoc_insertion_point(destructor:c2s.enter_room_req)
  SharedDtor();
}

void enter_room_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void enter_room_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* enter_room_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enter_room_req_descriptor_;
}

const enter_room_req& enter_room_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

enter_room_req* enter_room_req::default_instance_ = NULL;

enter_room_req* enter_room_req::New(::google::protobuf::Arena* arena) const {
  enter_room_req* n = new enter_room_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void enter_room_req::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<enter_room_req*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rule_, scene_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool enter_room_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.enter_room_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 rule = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rule_)));
          set_has_rule();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // required int32 mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
          set_has_mode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_scene;
        break;
      }

      // required int32 scene = 3;
      case 3: {
        if (tag == 24) {
         parse_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_)));
          set_has_scene();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.enter_room_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.enter_room_req)
  return false;
#undef DO_
}

void enter_room_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.enter_room_req)
  // required int32 rule = 1;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rule(), output);
  }

  // required int32 mode = 2;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // required int32 scene = 3;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.enter_room_req)
}

::google::protobuf::uint8* enter_room_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.enter_room_req)
  // required int32 rule = 1;
  if (has_rule()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rule(), target);
  }

  // required int32 mode = 2;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // required int32 scene = 3;
  if (has_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.enter_room_req)
  return target;
}

int enter_room_req::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_rule()) {
    // required int32 rule = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rule());
  }

  if (has_mode()) {
    // required int32 mode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  if (has_scene()) {
    // required int32 scene = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene());
  }

  return total_size;
}
int enter_room_req::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 rule = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rule());

    // required int32 mode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());

    // required int32 scene = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void enter_room_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const enter_room_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const enter_room_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void enter_room_req::MergeFrom(const enter_room_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rule()) {
      set_rule(from.rule());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
    if (from.has_scene()) {
      set_scene(from.scene());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void enter_room_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void enter_room_req::CopyFrom(const enter_room_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool enter_room_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void enter_room_req::Swap(enter_room_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void enter_room_req::InternalSwap(enter_room_req* other) {
  std::swap(rule_, other->rule_);
  std::swap(mode_, other->mode_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata enter_room_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = enter_room_req_descriptor_;
  metadata.reflection = enter_room_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// enter_room_req

// required int32 rule = 1;
bool enter_room_req::has_rule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void enter_room_req::set_has_rule() {
  _has_bits_[0] |= 0x00000001u;
}
void enter_room_req::clear_has_rule() {
  _has_bits_[0] &= ~0x00000001u;
}
void enter_room_req::clear_rule() {
  rule_ = 0;
  clear_has_rule();
}
 ::google::protobuf::int32 enter_room_req::rule() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.rule)
  return rule_;
}
 void enter_room_req::set_rule(::google::protobuf::int32 value) {
  set_has_rule();
  rule_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.rule)
}

// required int32 mode = 2;
bool enter_room_req::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void enter_room_req::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
void enter_room_req::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
void enter_room_req::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
 ::google::protobuf::int32 enter_room_req::mode() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.mode)
  return mode_;
}
 void enter_room_req::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.mode)
}

// required int32 scene = 3;
bool enter_room_req::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void enter_room_req::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
void enter_room_req::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
void enter_room_req::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
 ::google::protobuf::int32 enter_room_req::scene() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.scene)
  return scene_;
}
 void enter_room_req::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int enter_room_rsp::kErrorcodeFieldNumber;
const int enter_room_rsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

enter_room_rsp::enter_room_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.enter_room_rsp)
}

void enter_room_rsp::InitAsDefaultInstance() {
}

enter_room_rsp::enter_room_rsp(const enter_room_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.enter_room_rsp)
}

void enter_room_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

enter_room_rsp::~enter_room_rsp() {
  // @@protoc_insertion_point(destructor:c2s.enter_room_rsp)
  SharedDtor();
}

void enter_room_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void enter_room_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* enter_room_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enter_room_rsp_descriptor_;
}

const enter_room_rsp& enter_room_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

enter_room_rsp* enter_room_rsp::default_instance_ = NULL;

enter_room_rsp* enter_room_rsp::New(::google::protobuf::Arena* arena) const {
  enter_room_rsp* n = new enter_room_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void enter_room_rsp::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool enter_room_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.enter_room_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.enter_room_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.enter_room_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.enter_room_rsp)
  return false;
#undef DO_
}

void enter_room_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.enter_room_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.enter_room_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.enter_room_rsp)
}

::google::protobuf::uint8* enter_room_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.enter_room_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.enter_room_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.enter_room_rsp)
  return target;
}

int enter_room_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int enter_room_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void enter_room_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const enter_room_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const enter_room_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void enter_room_rsp::MergeFrom(const enter_room_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void enter_room_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void enter_room_rsp::CopyFrom(const enter_room_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool enter_room_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void enter_room_rsp::Swap(enter_room_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void enter_room_rsp::InternalSwap(enter_room_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata enter_room_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = enter_room_rsp_descriptor_;
  metadata.reflection = enter_room_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// enter_room_rsp

// required int32 errorcode = 1;
bool enter_room_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void enter_room_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void enter_room_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void enter_room_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 enter_room_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_rsp.errorcode)
  return errorcode_;
}
 void enter_room_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_rsp.errorcode)
}

// required string msg = 2;
bool enter_room_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void enter_room_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void enter_room_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void enter_room_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& enter_room_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void enter_room_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.enter_room_rsp.msg)
}
 void enter_room_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.enter_room_rsp.msg)
}
 void enter_room_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.enter_room_rsp.msg)
}
 ::std::string* enter_room_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.enter_room_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* enter_room_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void enter_room_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.enter_room_rsp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ready_req::kReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ready_req::ready_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.ready_req)
}

void ready_req::InitAsDefaultInstance() {
}

ready_req::ready_req(const ready_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.ready_req)
}

void ready_req::SharedCtor() {
  _cached_size_ = 0;
  ready_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ready_req::~ready_req() {
  // @@protoc_insertion_point(destructor:c2s.ready_req)
  SharedDtor();
}

void ready_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ready_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ready_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ready_req_descriptor_;
}

const ready_req& ready_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

ready_req* ready_req::default_instance_ = NULL;

ready_req* ready_req::New(::google::protobuf::Arena* arena) const {
  ready_req* n = new ready_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ready_req::Clear() {
  ready_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ready_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.ready_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ready = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ready_)));
          set_has_ready();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.ready_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.ready_req)
  return false;
#undef DO_
}

void ready_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.ready_req)
  // required int32 ready = 1;
  if (has_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ready(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.ready_req)
}

::google::protobuf::uint8* ready_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.ready_req)
  // required int32 ready = 1;
  if (has_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ready(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.ready_req)
  return target;
}

int ready_req::ByteSize() const {
  int total_size = 0;

  // required int32 ready = 1;
  if (has_ready()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ready());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ready_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ready_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ready_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ready_req::MergeFrom(const ready_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ready()) {
      set_ready(from.ready());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ready_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ready_req::CopyFrom(const ready_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ready_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ready_req::Swap(ready_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ready_req::InternalSwap(ready_req* other) {
  std::swap(ready_, other->ready_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ready_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ready_req_descriptor_;
  metadata.reflection = ready_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ready_req

// required int32 ready = 1;
bool ready_req::has_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ready_req::set_has_ready() {
  _has_bits_[0] |= 0x00000001u;
}
void ready_req::clear_has_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
void ready_req::clear_ready() {
  ready_ = 0;
  clear_has_ready();
}
 ::google::protobuf::int32 ready_req::ready() const {
  // @@protoc_insertion_point(field_get:c2s.ready_req.ready)
  return ready_;
}
 void ready_req::set_ready(::google::protobuf::int32 value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_req.ready)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ready_rsp::kErrorcodeFieldNumber;
const int ready_rsp::kMsgFieldNumber;
const int ready_rsp::kUserIdFieldNumber;
const int ready_rsp::kMcardsFieldNumber;
const int ready_rsp::kRcardsFieldNumber;
const int ready_rsp::kLcardsFieldNumber;
const int ready_rsp::kDcardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ready_rsp::ready_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.ready_rsp)
}

void ready_rsp::InitAsDefaultInstance() {
}

ready_rsp::ready_rsp(const ready_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.ready_rsp)
}

void ready_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ready_rsp::~ready_rsp() {
  // @@protoc_insertion_point(destructor:c2s.ready_rsp)
  SharedDtor();
}

void ready_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ready_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ready_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ready_rsp_descriptor_;
}

const ready_rsp& ready_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

ready_rsp* ready_rsp::default_instance_ = NULL;

ready_rsp* ready_rsp::New(::google::protobuf::Arena* arena) const {
  ready_rsp* n = new ready_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ready_rsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ready_rsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(errorcode_, user_id_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  mcards_.Clear();
  rcards_.Clear();
  lcards_.Clear();
  dcards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ready_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.ready_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.ready_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_user_id;
        break;
      }

      // required int32 user_id = 3;
      case 3: {
        if (tag == 24) {
         parse_user_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_id_)));
          set_has_user_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mcards;
        break;
      }

      // repeated int32 mcards = 4;
      case 4: {
        if (tag == 32) {
         parse_mcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_mcards())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mcards;
        if (input->ExpectTag(40)) goto parse_rcards;
        break;
      }

      // repeated int32 rcards = 5;
      case 5: {
        if (tag == 40) {
         parse_rcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_rcards())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rcards;
        if (input->ExpectTag(48)) goto parse_lcards;
        break;
      }

      // repeated int32 lcards = 6;
      case 6: {
        if (tag == 48) {
         parse_lcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_lcards())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_lcards;
        if (input->ExpectTag(56)) goto parse_dcards;
        break;
      }

      // repeated int32 dcards = 7;
      case 7: {
        if (tag == 56) {
         parse_dcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_dcards())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dcards;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.ready_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.ready_rsp)
  return false;
#undef DO_
}

void ready_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.ready_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.ready_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // required int32 user_id = 3;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->user_id(), output);
  }

  // repeated int32 mcards = 4;
  for (int i = 0; i < this->mcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->mcards(i), output);
  }

  // repeated int32 rcards = 5;
  for (int i = 0; i < this->rcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->rcards(i), output);
  }

  // repeated int32 lcards = 6;
  for (int i = 0; i < this->lcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->lcards(i), output);
  }

  // repeated int32 dcards = 7;
  for (int i = 0; i < this->dcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->dcards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.ready_rsp)
}

::google::protobuf::uint8* ready_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.ready_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.ready_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // required int32 user_id = 3;
  if (has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->user_id(), target);
  }

  // repeated int32 mcards = 4;
  for (int i = 0; i < this->mcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->mcards(i), target);
  }

  // repeated int32 rcards = 5;
  for (int i = 0; i < this->rcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->rcards(i), target);
  }

  // repeated int32 lcards = 6;
  for (int i = 0; i < this->lcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->lcards(i), target);
  }

  // repeated int32 dcards = 7;
  for (int i = 0; i < this->dcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->dcards(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.ready_rsp)
  return target;
}

int ready_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_user_id()) {
    // required int32 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());
  }

  return total_size;
}
int ready_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 user_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 mcards = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->mcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mcards(i));
    }
    total_size += 1 * this->mcards_size() + data_size;
  }

  // repeated int32 rcards = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->rcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rcards(i));
    }
    total_size += 1 * this->rcards_size() + data_size;
  }

  // repeated int32 lcards = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->lcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lcards(i));
    }
    total_size += 1 * this->lcards_size() + data_size;
  }

  // repeated int32 dcards = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->dcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dcards(i));
    }
    total_size += 1 * this->dcards_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ready_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ready_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ready_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ready_rsp::MergeFrom(const ready_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  mcards_.MergeFrom(from.mcards_);
  rcards_.MergeFrom(from.rcards_);
  lcards_.MergeFrom(from.lcards_);
  dcards_.MergeFrom(from.dcards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_user_id()) {
      set_user_id(from.user_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ready_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ready_rsp::CopyFrom(const ready_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ready_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ready_rsp::Swap(ready_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ready_rsp::InternalSwap(ready_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(user_id_, other->user_id_);
  mcards_.UnsafeArenaSwap(&other->mcards_);
  rcards_.UnsafeArenaSwap(&other->rcards_);
  lcards_.UnsafeArenaSwap(&other->lcards_);
  dcards_.UnsafeArenaSwap(&other->dcards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ready_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ready_rsp_descriptor_;
  metadata.reflection = ready_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ready_rsp

// required int32 errorcode = 1;
bool ready_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ready_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void ready_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void ready_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 ready_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.errorcode)
  return errorcode_;
}
 void ready_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.errorcode)
}

// required string msg = 2;
bool ready_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ready_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void ready_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void ready_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& ready_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ready_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.msg)
}
 void ready_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ready_rsp.msg)
}
 void ready_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ready_rsp.msg)
}
 ::std::string* ready_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.ready_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ready_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ready_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.ready_rsp.msg)
}

// required int32 user_id = 3;
bool ready_rsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ready_rsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
void ready_rsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void ready_rsp::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
 ::google::protobuf::int32 ready_rsp::user_id() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.user_id)
  return user_id_;
}
 void ready_rsp::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.user_id)
}

// repeated int32 mcards = 4;
int ready_rsp::mcards_size() const {
  return mcards_.size();
}
void ready_rsp::clear_mcards() {
  mcards_.Clear();
}
 ::google::protobuf::int32 ready_rsp::mcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.mcards)
  return mcards_.Get(index);
}
 void ready_rsp::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.mcards)
}
 void ready_rsp::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.mcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::mcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.mcards)
  return mcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
int ready_rsp::rcards_size() const {
  return rcards_.size();
}
void ready_rsp::clear_rcards() {
  rcards_.Clear();
}
 ::google::protobuf::int32 ready_rsp::rcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.rcards)
  return rcards_.Get(index);
}
 void ready_rsp::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.rcards)
}
 void ready_rsp::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.rcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::rcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.rcards)
  return rcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
int ready_rsp::lcards_size() const {
  return lcards_.size();
}
void ready_rsp::clear_lcards() {
  lcards_.Clear();
}
 ::google::protobuf::int32 ready_rsp::lcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.lcards)
  return lcards_.Get(index);
}
 void ready_rsp::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.lcards)
}
 void ready_rsp::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.lcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::lcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.lcards)
  return lcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
int ready_rsp::dcards_size() const {
  return dcards_.size();
}
void ready_rsp::clear_dcards() {
  dcards_.Clear();
}
 ::google::protobuf::int32 ready_rsp::dcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.dcards)
  return dcards_.Get(index);
}
 void ready_rsp::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.dcards)
}
 void ready_rsp::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.dcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::dcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.dcards)
  return dcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.dcards)
  return &dcards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mp_req::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mp_req::mp_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.mp_req)
}

void mp_req::InitAsDefaultInstance() {
}

mp_req::mp_req(const mp_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.mp_req)
}

void mp_req::SharedCtor() {
  _cached_size_ = 0;
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

mp_req::~mp_req() {
  // @@protoc_insertion_point(destructor:c2s.mp_req)
  SharedDtor();
}

void mp_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void mp_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mp_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mp_req_descriptor_;
}

const mp_req& mp_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

mp_req* mp_req::default_instance_ = NULL;

mp_req* mp_req::New(::google::protobuf::Arena* arena) const {
  mp_req* n = new mp_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mp_req::Clear() {
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool mp_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.mp_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.mp_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.mp_req)
  return false;
#undef DO_
}

void mp_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.mp_req)
  // required int32 m = 1;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.mp_req)
}

::google::protobuf::uint8* mp_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.mp_req)
  // required int32 m = 1;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.mp_req)
  return target;
}

int mp_req::ByteSize() const {
  int total_size = 0;

  // required int32 m = 1;
  if (has_m()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mp_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mp_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mp_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mp_req::MergeFrom(const mp_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m()) {
      set_m(from.m());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void mp_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mp_req::CopyFrom(const mp_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mp_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void mp_req::Swap(mp_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mp_req::InternalSwap(mp_req* other) {
  std::swap(m_, other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mp_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mp_req_descriptor_;
  metadata.reflection = mp_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// mp_req

// required int32 m = 1;
bool mp_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void mp_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
void mp_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
void mp_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
 ::google::protobuf::int32 mp_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.mp_req.m)
  return m_;
}
 void mp_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_req.m)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mp_rsp::kErrorcodeFieldNumber;
const int mp_rsp::kMsgFieldNumber;
const int mp_rsp::kMFieldNumber;
const int mp_rsp::kMcardsFieldNumber;
const int mp_rsp::kRcardsFieldNumber;
const int mp_rsp::kLcardsFieldNumber;
const int mp_rsp::kDcardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mp_rsp::mp_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.mp_rsp)
}

void mp_rsp::InitAsDefaultInstance() {
}

mp_rsp::mp_rsp(const mp_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.mp_rsp)
}

void mp_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

mp_rsp::~mp_rsp() {
  // @@protoc_insertion_point(destructor:c2s.mp_rsp)
  SharedDtor();
}

void mp_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void mp_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mp_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mp_rsp_descriptor_;
}

const mp_rsp& mp_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

mp_rsp* mp_rsp::default_instance_ = NULL;

mp_rsp* mp_rsp::New(::google::protobuf::Arena* arena) const {
  mp_rsp* n = new mp_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mp_rsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<mp_rsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(errorcode_, m_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  mcards_.Clear();
  rcards_.Clear();
  lcards_.Clear();
  dcards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool mp_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.mp_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.mp_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m;
        break;
      }

      // required int32 m = 3;
      case 3: {
        if (tag == 24) {
         parse_m:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mcards;
        break;
      }

      // repeated int32 mcards = 4;
      case 4: {
        if (tag == 32) {
         parse_mcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_mcards())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mcards;
        if (input->ExpectTag(40)) goto parse_rcards;
        break;
      }

      // repeated int32 rcards = 5;
      case 5: {
        if (tag == 40) {
         parse_rcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_rcards())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rcards;
        if (input->ExpectTag(48)) goto parse_lcards;
        break;
      }

      // repeated int32 lcards = 6;
      case 6: {
        if (tag == 48) {
         parse_lcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_lcards())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_lcards;
        if (input->ExpectTag(56)) goto parse_dcards;
        break;
      }

      // repeated int32 dcards = 7;
      case 7: {
        if (tag == 56) {
         parse_dcards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_dcards())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dcards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_dcards;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.mp_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.mp_rsp)
  return false;
#undef DO_
}

void mp_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.mp_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.mp_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // required int32 m = 3;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m(), output);
  }

  // repeated int32 mcards = 4;
  for (int i = 0; i < this->mcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->mcards(i), output);
  }

  // repeated int32 rcards = 5;
  for (int i = 0; i < this->rcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->rcards(i), output);
  }

  // repeated int32 lcards = 6;
  for (int i = 0; i < this->lcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->lcards(i), output);
  }

  // repeated int32 dcards = 7;
  for (int i = 0; i < this->dcards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->dcards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.mp_rsp)
}

::google::protobuf::uint8* mp_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.mp_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.mp_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // required int32 m = 3;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m(), target);
  }

  // repeated int32 mcards = 4;
  for (int i = 0; i < this->mcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->mcards(i), target);
  }

  // repeated int32 rcards = 5;
  for (int i = 0; i < this->rcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->rcards(i), target);
  }

  // repeated int32 lcards = 6;
  for (int i = 0; i < this->lcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->lcards(i), target);
  }

  // repeated int32 dcards = 7;
  for (int i = 0; i < this->dcards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->dcards(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.mp_rsp)
  return target;
}

int mp_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_m()) {
    // required int32 m = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }

  return total_size;
}
int mp_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 m = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int32 mcards = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->mcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mcards(i));
    }
    total_size += 1 * this->mcards_size() + data_size;
  }

  // repeated int32 rcards = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->rcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rcards(i));
    }
    total_size += 1 * this->rcards_size() + data_size;
  }

  // repeated int32 lcards = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->lcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lcards(i));
    }
    total_size += 1 * this->lcards_size() + data_size;
  }

  // repeated int32 dcards = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->dcards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dcards(i));
    }
    total_size += 1 * this->dcards_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mp_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mp_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mp_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mp_rsp::MergeFrom(const mp_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  mcards_.MergeFrom(from.mcards_);
  rcards_.MergeFrom(from.rcards_);
  lcards_.MergeFrom(from.lcards_);
  dcards_.MergeFrom(from.dcards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_m()) {
      set_m(from.m());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void mp_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mp_rsp::CopyFrom(const mp_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mp_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void mp_rsp::Swap(mp_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mp_rsp::InternalSwap(mp_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(m_, other->m_);
  mcards_.UnsafeArenaSwap(&other->mcards_);
  rcards_.UnsafeArenaSwap(&other->rcards_);
  lcards_.UnsafeArenaSwap(&other->lcards_);
  dcards_.UnsafeArenaSwap(&other->dcards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mp_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mp_rsp_descriptor_;
  metadata.reflection = mp_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// mp_rsp

// required int32 errorcode = 1;
bool mp_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void mp_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void mp_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void mp_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 mp_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.errorcode)
  return errorcode_;
}
 void mp_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.errorcode)
}

// required string msg = 2;
bool mp_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void mp_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void mp_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void mp_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& mp_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mp_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.msg)
}
 void mp_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.mp_rsp.msg)
}
 void mp_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.mp_rsp.msg)
}
 ::std::string* mp_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.mp_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* mp_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mp_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.mp_rsp.msg)
}

// required int32 m = 3;
bool mp_rsp::has_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void mp_rsp::set_has_m() {
  _has_bits_[0] |= 0x00000004u;
}
void mp_rsp::clear_has_m() {
  _has_bits_[0] &= ~0x00000004u;
}
void mp_rsp::clear_m() {
  m_ = 0;
  clear_has_m();
}
 ::google::protobuf::int32 mp_rsp::m() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.m)
  return m_;
}
 void mp_rsp::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.m)
}

// repeated int32 mcards = 4;
int mp_rsp::mcards_size() const {
  return mcards_.size();
}
void mp_rsp::clear_mcards() {
  mcards_.Clear();
}
 ::google::protobuf::int32 mp_rsp::mcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.mcards)
  return mcards_.Get(index);
}
 void mp_rsp::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.mcards)
}
 void mp_rsp::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.mcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::mcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.mcards)
  return mcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
int mp_rsp::rcards_size() const {
  return rcards_.size();
}
void mp_rsp::clear_rcards() {
  rcards_.Clear();
}
 ::google::protobuf::int32 mp_rsp::rcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.rcards)
  return rcards_.Get(index);
}
 void mp_rsp::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.rcards)
}
 void mp_rsp::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.rcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::rcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.rcards)
  return rcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
int mp_rsp::lcards_size() const {
  return lcards_.size();
}
void mp_rsp::clear_lcards() {
  lcards_.Clear();
}
 ::google::protobuf::int32 mp_rsp::lcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.lcards)
  return lcards_.Get(index);
}
 void mp_rsp::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.lcards)
}
 void mp_rsp::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.lcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::lcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.lcards)
  return lcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
int mp_rsp::dcards_size() const {
  return dcards_.size();
}
void mp_rsp::clear_dcards() {
  dcards_.Clear();
}
 ::google::protobuf::int32 mp_rsp::dcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.dcards)
  return dcards_.Get(index);
}
 void mp_rsp::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.dcards)
}
 void mp_rsp::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.dcards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::dcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.dcards)
  return dcards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.dcards)
  return &dcards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int am_req::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

am_req::am_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.am_req)
}

void am_req::InitAsDefaultInstance() {
}

am_req::am_req(const am_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.am_req)
}

void am_req::SharedCtor() {
  _cached_size_ = 0;
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

am_req::~am_req() {
  // @@protoc_insertion_point(destructor:c2s.am_req)
  SharedDtor();
}

void am_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void am_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* am_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return am_req_descriptor_;
}

const am_req& am_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

am_req* am_req::default_instance_ = NULL;

am_req* am_req::New(::google::protobuf::Arena* arena) const {
  am_req* n = new am_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void am_req::Clear() {
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool am_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.am_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.am_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.am_req)
  return false;
#undef DO_
}

void am_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.am_req)
  // required int32 m = 1;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.am_req)
}

::google::protobuf::uint8* am_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.am_req)
  // required int32 m = 1;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.am_req)
  return target;
}

int am_req::ByteSize() const {
  int total_size = 0;

  // required int32 m = 1;
  if (has_m()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void am_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const am_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const am_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void am_req::MergeFrom(const am_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m()) {
      set_m(from.m());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void am_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void am_req::CopyFrom(const am_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool am_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void am_req::Swap(am_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void am_req::InternalSwap(am_req* other) {
  std::swap(m_, other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata am_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = am_req_descriptor_;
  metadata.reflection = am_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// am_req

// required int32 m = 1;
bool am_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void am_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
void am_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
void am_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
 ::google::protobuf::int32 am_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.am_req.m)
  return m_;
}
 void am_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.am_req.m)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int am_rsp::kErrorcodeFieldNumber;
const int am_rsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

am_rsp::am_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.am_rsp)
}

void am_rsp::InitAsDefaultInstance() {
}

am_rsp::am_rsp(const am_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.am_rsp)
}

void am_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

am_rsp::~am_rsp() {
  // @@protoc_insertion_point(destructor:c2s.am_rsp)
  SharedDtor();
}

void am_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void am_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* am_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return am_rsp_descriptor_;
}

const am_rsp& am_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

am_rsp* am_rsp::default_instance_ = NULL;

am_rsp* am_rsp::New(::google::protobuf::Arena* arena) const {
  am_rsp* n = new am_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void am_rsp::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool am_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.am_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.am_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.am_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.am_rsp)
  return false;
#undef DO_
}

void am_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.am_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.am_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.am_rsp)
}

::google::protobuf::uint8* am_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.am_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.am_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.am_rsp)
  return target;
}

int am_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int am_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void am_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const am_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const am_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void am_rsp::MergeFrom(const am_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void am_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void am_rsp::CopyFrom(const am_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool am_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void am_rsp::Swap(am_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void am_rsp::InternalSwap(am_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata am_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = am_rsp_descriptor_;
  metadata.reflection = am_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// am_rsp

// required int32 errorcode = 1;
bool am_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void am_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void am_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void am_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 am_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.am_rsp.errorcode)
  return errorcode_;
}
 void am_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.am_rsp.errorcode)
}

// required string msg = 2;
bool am_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void am_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void am_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void am_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& am_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.am_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void am_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.am_rsp.msg)
}
 void am_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.am_rsp.msg)
}
 void am_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.am_rsp.msg)
}
 ::std::string* am_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.am_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* am_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void am_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.am_rsp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rob_req::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rob_req::rob_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.rob_req)
}

void rob_req::InitAsDefaultInstance() {
}

rob_req::rob_req(const rob_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.rob_req)
}

void rob_req::SharedCtor() {
  _cached_size_ = 0;
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rob_req::~rob_req() {
  // @@protoc_insertion_point(destructor:c2s.rob_req)
  SharedDtor();
}

void rob_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void rob_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rob_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rob_req_descriptor_;
}

const rob_req& rob_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

rob_req* rob_req::default_instance_ = NULL;

rob_req* rob_req::New(::google::protobuf::Arena* arena) const {
  rob_req* n = new rob_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rob_req::Clear() {
  m_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool rob_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.rob_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 m = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_)));
          set_has_m();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.rob_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.rob_req)
  return false;
#undef DO_
}

void rob_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.rob_req)
  // required int32 m = 1;
  if (has_m()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.rob_req)
}

::google::protobuf::uint8* rob_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.rob_req)
  // required int32 m = 1;
  if (has_m()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.rob_req)
  return target;
}

int rob_req::ByteSize() const {
  int total_size = 0;

  // required int32 m = 1;
  if (has_m()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rob_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const rob_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rob_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rob_req::MergeFrom(const rob_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m()) {
      set_m(from.m());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void rob_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rob_req::CopyFrom(const rob_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rob_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void rob_req::Swap(rob_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rob_req::InternalSwap(rob_req* other) {
  std::swap(m_, other->m_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rob_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rob_req_descriptor_;
  metadata.reflection = rob_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rob_req

// required int32 m = 1;
bool rob_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void rob_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
void rob_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
void rob_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
 ::google::protobuf::int32 rob_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.rob_req.m)
  return m_;
}
 void rob_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_req.m)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rob_rsp::kErrorcodeFieldNumber;
const int rob_rsp::kMsgFieldNumber;
const int rob_rsp::kYourTurnFieldNumber;
const int rob_rsp::kCountdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rob_rsp::rob_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.rob_rsp)
}

void rob_rsp::InitAsDefaultInstance() {
}

rob_rsp::rob_rsp(const rob_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.rob_rsp)
}

void rob_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  your_turn_ = 0;
  countdown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

rob_rsp::~rob_rsp() {
  // @@protoc_insertion_point(destructor:c2s.rob_rsp)
  SharedDtor();
}

void rob_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void rob_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rob_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rob_rsp_descriptor_;
}

const rob_rsp& rob_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

rob_rsp* rob_rsp::default_instance_ = NULL;

rob_rsp* rob_rsp::New(::google::protobuf::Arena* arena) const {
  rob_rsp* n = new rob_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rob_rsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<rob_rsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(errorcode_, countdown_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool rob_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.rob_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.rob_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_your_turn;
        break;
      }

      // required int32 your_turn = 3;
      case 3: {
        if (tag == 24) {
         parse_your_turn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &your_turn_)));
          set_has_your_turn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_countdown;
        break;
      }

      // required int32 countdown = 4;
      case 4: {
        if (tag == 32) {
         parse_countdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_)));
          set_has_countdown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.rob_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.rob_rsp)
  return false;
#undef DO_
}

void rob_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.rob_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.rob_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // required int32 your_turn = 3;
  if (has_your_turn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->your_turn(), output);
  }

  // required int32 countdown = 4;
  if (has_countdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->countdown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.rob_rsp)
}

::google::protobuf::uint8* rob_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.rob_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.rob_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // required int32 your_turn = 3;
  if (has_your_turn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->your_turn(), target);
  }

  // required int32 countdown = 4;
  if (has_countdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->countdown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.rob_rsp)
  return target;
}

int rob_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_your_turn()) {
    // required int32 your_turn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->your_turn());
  }

  if (has_countdown()) {
    // required int32 countdown = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countdown());
  }

  return total_size;
}
int rob_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 your_turn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->your_turn());

    // required int32 countdown = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countdown());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rob_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const rob_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const rob_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void rob_rsp::MergeFrom(const rob_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_your_turn()) {
      set_your_turn(from.your_turn());
    }
    if (from.has_countdown()) {
      set_countdown(from.countdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void rob_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rob_rsp::CopyFrom(const rob_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rob_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void rob_rsp::Swap(rob_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rob_rsp::InternalSwap(rob_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(your_turn_, other->your_turn_);
  std::swap(countdown_, other->countdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rob_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rob_rsp_descriptor_;
  metadata.reflection = rob_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rob_rsp

// required int32 errorcode = 1;
bool rob_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void rob_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void rob_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void rob_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 rob_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.errorcode)
  return errorcode_;
}
 void rob_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.errorcode)
}

// required string msg = 2;
bool rob_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void rob_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void rob_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void rob_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& rob_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rob_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.msg)
}
 void rob_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.rob_rsp.msg)
}
 void rob_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.rob_rsp.msg)
}
 ::std::string* rob_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.rob_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* rob_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void rob_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.rob_rsp.msg)
}

// required int32 your_turn = 3;
bool rob_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void rob_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
void rob_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
void rob_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
 ::google::protobuf::int32 rob_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.your_turn)
  return your_turn_;
}
 void rob_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.your_turn)
}

// required int32 countdown = 4;
bool rob_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void rob_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
void rob_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
void rob_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
 ::google::protobuf::int32 rob_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.countdown)
  return countdown_;
}
 void rob_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.countdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lead_req::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lead_req::lead_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.lead_req)
}

void lead_req::InitAsDefaultInstance() {
}

lead_req::lead_req(const lead_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.lead_req)
}

void lead_req::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

lead_req::~lead_req() {
  // @@protoc_insertion_point(destructor:c2s.lead_req)
  SharedDtor();
}

void lead_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void lead_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lead_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return lead_req_descriptor_;
}

const lead_req& lead_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

lead_req* lead_req::default_instance_ = NULL;

lead_req* lead_req::New(::google::protobuf::Arena* arena) const {
  lead_req* n = new lead_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lead_req::Clear() {
  cards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool lead_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.lead_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 cards = 1;
      case 1: {
        if (tag == 8) {
         parse_cards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_cards())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cards())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_cards;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.lead_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.lead_req)
  return false;
#undef DO_
}

void lead_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.lead_req)
  // repeated int32 cards = 1;
  for (int i = 0; i < this->cards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->cards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.lead_req)
}

::google::protobuf::uint8* lead_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.lead_req)
  // repeated int32 cards = 1;
  for (int i = 0; i < this->cards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->cards(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.lead_req)
  return target;
}

int lead_req::ByteSize() const {
  int total_size = 0;

  // repeated int32 cards = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->cards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cards(i));
    }
    total_size += 1 * this->cards_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lead_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const lead_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const lead_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void lead_req::MergeFrom(const lead_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  cards_.MergeFrom(from.cards_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void lead_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lead_req::CopyFrom(const lead_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lead_req::IsInitialized() const {

  return true;
}

void lead_req::Swap(lead_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lead_req::InternalSwap(lead_req* other) {
  cards_.UnsafeArenaSwap(&other->cards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lead_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = lead_req_descriptor_;
  metadata.reflection = lead_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// lead_req

// repeated int32 cards = 1;
int lead_req::cards_size() const {
  return cards_.size();
}
void lead_req::clear_cards() {
  cards_.Clear();
}
 ::google::protobuf::int32 lead_req::cards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.lead_req.cards)
  return cards_.Get(index);
}
 void lead_req::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.lead_req.cards)
}
 void lead_req::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.lead_req.cards)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
lead_req::cards() const {
  // @@protoc_insertion_point(field_list:c2s.lead_req.cards)
  return cards_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
lead_req::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.lead_req.cards)
  return &cards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lead_rsp_settlement::kGoldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lead_rsp_settlement::lead_rsp_settlement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.lead_rsp.settlement)
}

void lead_rsp_settlement::InitAsDefaultInstance() {
}

lead_rsp_settlement::lead_rsp_settlement(const lead_rsp_settlement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.lead_rsp.settlement)
}

void lead_rsp_settlement::SharedCtor() {
  _cached_size_ = 0;
  gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

lead_rsp_settlement::~lead_rsp_settlement() {
  // @@protoc_insertion_point(destructor:c2s.lead_rsp.settlement)
  SharedDtor();
}

void lead_rsp_settlement::SharedDtor() {
  if (this != default_instance_) {
  }
}

void lead_rsp_settlement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lead_rsp_settlement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return lead_rsp_settlement_descriptor_;
}

const lead_rsp_settlement& lead_rsp_settlement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

lead_rsp_settlement* lead_rsp_settlement::default_instance_ = NULL;

lead_rsp_settlement* lead_rsp_settlement::New(::google::protobuf::Arena* arena) const {
  lead_rsp_settlement* n = new lead_rsp_settlement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lead_rsp_settlement::Clear() {
  gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool lead_rsp_settlement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.lead_rsp.settlement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 gold = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.lead_rsp.settlement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.lead_rsp.settlement)
  return false;
#undef DO_
}

void lead_rsp_settlement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.lead_rsp.settlement)
  // required int32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.lead_rsp.settlement)
}

::google::protobuf::uint8* lead_rsp_settlement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.lead_rsp.settlement)
  // required int32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.lead_rsp.settlement)
  return target;
}

int lead_rsp_settlement::ByteSize() const {
  int total_size = 0;

  // required int32 gold = 1;
  if (has_gold()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gold());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lead_rsp_settlement::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const lead_rsp_settlement* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const lead_rsp_settlement>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void lead_rsp_settlement::MergeFrom(const lead_rsp_settlement& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void lead_rsp_settlement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lead_rsp_settlement::CopyFrom(const lead_rsp_settlement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lead_rsp_settlement::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void lead_rsp_settlement::Swap(lead_rsp_settlement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lead_rsp_settlement::InternalSwap(lead_rsp_settlement* other) {
  std::swap(gold_, other->gold_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lead_rsp_settlement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = lead_rsp_settlement_descriptor_;
  metadata.reflection = lead_rsp_settlement_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int lead_rsp::kErrorcodeFieldNumber;
const int lead_rsp::kMsgFieldNumber;
const int lead_rsp::kYourTurnFieldNumber;
const int lead_rsp::kCountdownFieldNumber;
const int lead_rsp::kMeFieldNumber;
const int lead_rsp::kRightFieldNumber;
const int lead_rsp::kLeftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

lead_rsp::lead_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.lead_rsp)
}

void lead_rsp::InitAsDefaultInstance() {
  me_ = const_cast< ::c2s::lead_rsp_settlement*>(&::c2s::lead_rsp_settlement::default_instance());
  right_ = const_cast< ::c2s::lead_rsp_settlement*>(&::c2s::lead_rsp_settlement::default_instance());
  left_ = const_cast< ::c2s::lead_rsp_settlement*>(&::c2s::lead_rsp_settlement::default_instance());
}

lead_rsp::lead_rsp(const lead_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.lead_rsp)
}

void lead_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  your_turn_ = 0;
  countdown_ = 0;
  me_ = NULL;
  right_ = NULL;
  left_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

lead_rsp::~lead_rsp() {
  // @@protoc_insertion_point(destructor:c2s.lead_rsp)
  SharedDtor();
}

void lead_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete me_;
    delete right_;
    delete left_;
  }
}

void lead_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* lead_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return lead_rsp_descriptor_;
}

const lead_rsp& lead_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

lead_rsp* lead_rsp::default_instance_ = NULL;

lead_rsp* lead_rsp::New(::google::protobuf::Arena* arena) const {
  lead_rsp* n = new lead_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void lead_rsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<lead_rsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(errorcode_, your_turn_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    countdown_ = 0;
    if (has_me()) {
      if (me_ != NULL) me_->::c2s::lead_rsp_settlement::Clear();
    }
    if (has_right()) {
      if (right_ != NULL) right_->::c2s::lead_rsp_settlement::Clear();
    }
    if (has_left()) {
      if (left_ != NULL) left_->::c2s::lead_rsp_settlement::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool lead_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.lead_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.lead_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_your_turn;
        break;
      }

      // required int32 your_turn = 3;
      case 3: {
        if (tag == 24) {
         parse_your_turn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &your_turn_)));
          set_has_your_turn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_countdown;
        break;
      }

      // required int32 countdown = 4;
      case 4: {
        if (tag == 32) {
         parse_countdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_)));
          set_has_countdown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_me;
        break;
      }

      // optional .c2s.lead_rsp.settlement me = 5;
      case 5: {
        if (tag == 42) {
         parse_me:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_me()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_right;
        break;
      }

      // optional .c2s.lead_rsp.settlement right = 6;
      case 6: {
        if (tag == 50) {
         parse_right:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_left;
        break;
      }

      // optional .c2s.lead_rsp.settlement left = 7;
      case 7: {
        if (tag == 58) {
         parse_left:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.lead_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.lead_rsp)
  return false;
#undef DO_
}

void lead_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.lead_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.lead_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // required int32 your_turn = 3;
  if (has_your_turn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->your_turn(), output);
  }

  // required int32 countdown = 4;
  if (has_countdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->countdown(), output);
  }

  // optional .c2s.lead_rsp.settlement me = 5;
  if (has_me()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->me_, output);
  }

  // optional .c2s.lead_rsp.settlement right = 6;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->right_, output);
  }

  // optional .c2s.lead_rsp.settlement left = 7;
  if (has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->left_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.lead_rsp)
}

::google::protobuf::uint8* lead_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.lead_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.lead_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // required int32 your_turn = 3;
  if (has_your_turn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->your_turn(), target);
  }

  // required int32 countdown = 4;
  if (has_countdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->countdown(), target);
  }

  // optional .c2s.lead_rsp.settlement me = 5;
  if (has_me()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->me_, target);
  }

  // optional .c2s.lead_rsp.settlement right = 6;
  if (has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->right_, target);
  }

  // optional .c2s.lead_rsp.settlement left = 7;
  if (has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->left_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.lead_rsp)
  return target;
}

int lead_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_your_turn()) {
    // required int32 your_turn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->your_turn());
  }

  if (has_countdown()) {
    // required int32 countdown = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countdown());
  }

  return total_size;
}
int lead_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 your_turn = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->your_turn());

    // required int32 countdown = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->countdown());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[4 / 32] & 112u) {
    // optional .c2s.lead_rsp.settlement me = 5;
    if (has_me()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->me_);
    }

    // optional .c2s.lead_rsp.settlement right = 6;
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->right_);
    }

    // optional .c2s.lead_rsp.settlement left = 7;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->left_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void lead_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const lead_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const lead_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void lead_rsp::MergeFrom(const lead_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_your_turn()) {
      set_your_turn(from.your_turn());
    }
    if (from.has_countdown()) {
      set_countdown(from.countdown());
    }
    if (from.has_me()) {
      mutable_me()->::c2s::lead_rsp_settlement::MergeFrom(from.me());
    }
    if (from.has_right()) {
      mutable_right()->::c2s::lead_rsp_settlement::MergeFrom(from.right());
    }
    if (from.has_left()) {
      mutable_left()->::c2s::lead_rsp_settlement::MergeFrom(from.left());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void lead_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void lead_rsp::CopyFrom(const lead_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool lead_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_me()) {
    if (!this->me_->IsInitialized()) return false;
  }
  if (has_right()) {
    if (!this->right_->IsInitialized()) return false;
  }
  if (has_left()) {
    if (!this->left_->IsInitialized()) return false;
  }
  return true;
}

void lead_rsp::Swap(lead_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void lead_rsp::InternalSwap(lead_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(your_turn_, other->your_turn_);
  std::swap(countdown_, other->countdown_);
  std::swap(me_, other->me_);
  std::swap(right_, other->right_);
  std::swap(left_, other->left_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata lead_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = lead_rsp_descriptor_;
  metadata.reflection = lead_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// lead_rsp_settlement

// required int32 gold = 1;
bool lead_rsp_settlement::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void lead_rsp_settlement::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
void lead_rsp_settlement::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
void lead_rsp_settlement::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
 ::google::protobuf::int32 lead_rsp_settlement::gold() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.settlement.gold)
  return gold_;
}
 void lead_rsp_settlement::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.settlement.gold)
}

// -------------------------------------------------------------------

// lead_rsp

// required int32 errorcode = 1;
bool lead_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void lead_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void lead_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void lead_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 lead_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.errorcode)
  return errorcode_;
}
 void lead_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.errorcode)
}

// required string msg = 2;
bool lead_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void lead_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void lead_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void lead_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& lead_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void lead_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.msg)
}
 void lead_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.lead_rsp.msg)
}
 void lead_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.lead_rsp.msg)
}
 ::std::string* lead_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* lead_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void lead_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.msg)
}

// required int32 your_turn = 3;
bool lead_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void lead_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
void lead_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
void lead_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
 ::google::protobuf::int32 lead_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.your_turn)
  return your_turn_;
}
 void lead_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.your_turn)
}

// required int32 countdown = 4;
bool lead_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void lead_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
void lead_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
void lead_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
 ::google::protobuf::int32 lead_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.countdown)
  return countdown_;
}
 void lead_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.countdown)
}

// optional .c2s.lead_rsp.settlement me = 5;
bool lead_rsp::has_me() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void lead_rsp::set_has_me() {
  _has_bits_[0] |= 0x00000010u;
}
void lead_rsp::clear_has_me() {
  _has_bits_[0] &= ~0x00000010u;
}
void lead_rsp::clear_me() {
  if (me_ != NULL) me_->::c2s::lead_rsp_settlement::Clear();
  clear_has_me();
}
const ::c2s::lead_rsp_settlement& lead_rsp::me() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.me)
  return me_ != NULL ? *me_ : *default_instance_->me_;
}
::c2s::lead_rsp_settlement* lead_rsp::mutable_me() {
  set_has_me();
  if (me_ == NULL) {
    me_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.me)
  return me_;
}
::c2s::lead_rsp_settlement* lead_rsp::release_me() {
  clear_has_me();
  ::c2s::lead_rsp_settlement* temp = me_;
  me_ = NULL;
  return temp;
}
void lead_rsp::set_allocated_me(::c2s::lead_rsp_settlement* me) {
  delete me_;
  me_ = me;
  if (me) {
    set_has_me();
  } else {
    clear_has_me();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.me)
}

// optional .c2s.lead_rsp.settlement right = 6;
bool lead_rsp::has_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void lead_rsp::set_has_right() {
  _has_bits_[0] |= 0x00000020u;
}
void lead_rsp::clear_has_right() {
  _has_bits_[0] &= ~0x00000020u;
}
void lead_rsp::clear_right() {
  if (right_ != NULL) right_->::c2s::lead_rsp_settlement::Clear();
  clear_has_right();
}
const ::c2s::lead_rsp_settlement& lead_rsp::right() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.right)
  return right_ != NULL ? *right_ : *default_instance_->right_;
}
::c2s::lead_rsp_settlement* lead_rsp::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.right)
  return right_;
}
::c2s::lead_rsp_settlement* lead_rsp::release_right() {
  clear_has_right();
  ::c2s::lead_rsp_settlement* temp = right_;
  right_ = NULL;
  return temp;
}
void lead_rsp::set_allocated_right(::c2s::lead_rsp_settlement* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.right)
}

// optional .c2s.lead_rsp.settlement left = 7;
bool lead_rsp::has_left() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void lead_rsp::set_has_left() {
  _has_bits_[0] |= 0x00000040u;
}
void lead_rsp::clear_has_left() {
  _has_bits_[0] &= ~0x00000040u;
}
void lead_rsp::clear_left() {
  if (left_ != NULL) left_->::c2s::lead_rsp_settlement::Clear();
  clear_has_left();
}
const ::c2s::lead_rsp_settlement& lead_rsp::left() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.left)
  return left_ != NULL ? *left_ : *default_instance_->left_;
}
::c2s::lead_rsp_settlement* lead_rsp::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.left)
  return left_;
}
::c2s::lead_rsp_settlement* lead_rsp::release_left() {
  clear_has_left();
  ::c2s::lead_rsp_settlement* temp = left_;
  left_ = NULL;
  return temp;
}
void lead_rsp::set_allocated_left(::c2s::lead_rsp_settlement* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.left)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

logout_req::logout_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.logout_req)
}

void logout_req::InitAsDefaultInstance() {
}

logout_req::logout_req(const logout_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.logout_req)
}

void logout_req::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

logout_req::~logout_req() {
  // @@protoc_insertion_point(destructor:c2s.logout_req)
  SharedDtor();
}

void logout_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void logout_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* logout_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return logout_req_descriptor_;
}

const logout_req& logout_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

logout_req* logout_req::default_instance_ = NULL;

logout_req* logout_req::New(::google::protobuf::Arena* arena) const {
  logout_req* n = new logout_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void logout_req::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool logout_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.logout_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.logout_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.logout_req)
  return false;
#undef DO_
}

void logout_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.logout_req)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.logout_req)
}

::google::protobuf::uint8* logout_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.logout_req)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.logout_req)
  return target;
}

int logout_req::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void logout_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const logout_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const logout_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void logout_req::MergeFrom(const logout_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void logout_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void logout_req::CopyFrom(const logout_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool logout_req::IsInitialized() const {

  return true;
}

void logout_req::Swap(logout_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void logout_req::InternalSwap(logout_req* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata logout_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = logout_req_descriptor_;
  metadata.reflection = logout_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// logout_req

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int logout_rsp::kErrorcodeFieldNumber;
const int logout_rsp::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

logout_rsp::logout_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.logout_rsp)
}

void logout_rsp::InitAsDefaultInstance() {
}

logout_rsp::logout_rsp(const logout_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.logout_rsp)
}

void logout_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

logout_rsp::~logout_rsp() {
  // @@protoc_insertion_point(destructor:c2s.logout_rsp)
  SharedDtor();
}

void logout_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void logout_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* logout_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return logout_rsp_descriptor_;
}

const logout_rsp& logout_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

logout_rsp* logout_rsp::default_instance_ = NULL;

logout_rsp* logout_rsp::New(::google::protobuf::Arena* arena) const {
  logout_rsp* n = new logout_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void logout_rsp::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 0;
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool logout_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.logout_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.logout_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.logout_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.logout_rsp)
  return false;
#undef DO_
}

void logout_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.logout_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.logout_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.logout_rsp)
}

::google::protobuf::uint8* logout_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.logout_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.logout_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.logout_rsp)
  return target;
}

int logout_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int logout_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void logout_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const logout_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const logout_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void logout_rsp::MergeFrom(const logout_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void logout_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void logout_rsp::CopyFrom(const logout_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool logout_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void logout_rsp::Swap(logout_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void logout_rsp::InternalSwap(logout_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata logout_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = logout_rsp_descriptor_;
  metadata.reflection = logout_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// logout_rsp

// required int32 errorcode = 1;
bool logout_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void logout_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void logout_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void logout_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 logout_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.logout_rsp.errorcode)
  return errorcode_;
}
 void logout_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.logout_rsp.errorcode)
}

// required string msg = 2;
bool logout_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void logout_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void logout_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void logout_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& logout_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.logout_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void logout_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.logout_rsp.msg)
}
 void logout_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.logout_rsp.msg)
}
 void logout_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.logout_rsp.msg)
}
 ::std::string* logout_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.logout_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* logout_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void logout_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.logout_rsp.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deal_cards_req::deal_cards_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.deal_cards_req)
}

void deal_cards_req::InitAsDefaultInstance() {
}

deal_cards_req::deal_cards_req(const deal_cards_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.deal_cards_req)
}

void deal_cards_req::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

deal_cards_req::~deal_cards_req() {
  // @@protoc_insertion_point(destructor:c2s.deal_cards_req)
  SharedDtor();
}

void deal_cards_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void deal_cards_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deal_cards_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deal_cards_req_descriptor_;
}

const deal_cards_req& deal_cards_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

deal_cards_req* deal_cards_req::default_instance_ = NULL;

deal_cards_req* deal_cards_req::New(::google::protobuf::Arena* arena) const {
  deal_cards_req* n = new deal_cards_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deal_cards_req::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool deal_cards_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.deal_cards_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.deal_cards_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.deal_cards_req)
  return false;
#undef DO_
}

void deal_cards_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.deal_cards_req)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.deal_cards_req)
}

::google::protobuf::uint8* deal_cards_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.deal_cards_req)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.deal_cards_req)
  return target;
}

int deal_cards_req::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deal_cards_req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const deal_cards_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const deal_cards_req>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void deal_cards_req::MergeFrom(const deal_cards_req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void deal_cards_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deal_cards_req::CopyFrom(const deal_cards_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deal_cards_req::IsInitialized() const {

  return true;
}

void deal_cards_req::Swap(deal_cards_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deal_cards_req::InternalSwap(deal_cards_req* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deal_cards_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deal_cards_req_descriptor_;
  metadata.reflection = deal_cards_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// deal_cards_req

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int deal_cards_rsp::kErrorcodeFieldNumber;
const int deal_cards_rsp::kMsgFieldNumber;
const int deal_cards_rsp::kYourTurnFieldNumber;
const int deal_cards_rsp::kCountdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

deal_cards_rsp::deal_cards_rsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:c2s.deal_cards_rsp)
}

void deal_cards_rsp::InitAsDefaultInstance() {
}

deal_cards_rsp::deal_cards_rsp(const deal_cards_rsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:c2s.deal_cards_rsp)
}

void deal_cards_rsp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errorcode_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  your_turn_ = 0;
  countdown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

deal_cards_rsp::~deal_cards_rsp() {
  // @@protoc_insertion_point(destructor:c2s.deal_cards_rsp)
  SharedDtor();
}

void deal_cards_rsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void deal_cards_rsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* deal_cards_rsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return deal_cards_rsp_descriptor_;
}

const deal_cards_rsp& deal_cards_rsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_c2s_2eproto();
  return *default_instance_;
}

deal_cards_rsp* deal_cards_rsp::default_instance_ = NULL;

deal_cards_rsp* deal_cards_rsp::New(::google::protobuf::Arena* arena) const {
  deal_cards_rsp* n = new deal_cards_rsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void deal_cards_rsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<deal_cards_rsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(errorcode_, countdown_);
    if (has_msg()) {
      msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool deal_cards_rsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:c2s.deal_cards_rsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errorcode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // required string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c2s.deal_cards_rsp.msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_your_turn;
        break;
      }

      // optional int32 your_turn = 3;
      case 3: {
        if (tag == 24) {
         parse_your_turn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &your_turn_)));
          set_has_your_turn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_countdown;
        break;
      }

      // optional int32 countdown = 4;
      case 4: {
        if (tag == 32) {
         parse_countdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &countdown_)));
          set_has_countdown();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:c2s.deal_cards_rsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:c2s.deal_cards_rsp)
  return false;
#undef DO_
}

void deal_cards_rsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:c2s.deal_cards_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.deal_cards_rsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // optional int32 your_turn = 3;
  if (has_your_turn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->your_turn(), output);
  }

  // optional int32 countdown = 4;
  if (has_countdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->countdown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:c2s.deal_cards_rsp)
}

::google::protobuf::uint8* deal_cards_rsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:c2s.deal_cards_rsp)
  // required int32 errorcode = 1;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // required string msg = 2;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c2s.deal_cards_rsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // optional int32 your_turn = 3;
  if (has_your_turn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->your_turn(), target);
  }

  // optional int32 countdown = 4;
  if (has_countdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->countdown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:c2s.deal_cards_rsp)
  return target;
}

int deal_cards_rsp::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_errorcode()) {
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  if (has_msg()) {
    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  return total_size;
}
int deal_cards_rsp::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 errorcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());

    // required string msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 12u) {
    // optional int32 your_turn = 3;
    if (has_your_turn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->your_turn());
    }

    // optional int32 countdown = 4;
    if (has_countdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->countdown());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void deal_cards_rsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const deal_cards_rsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const deal_cards_rsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void deal_cards_rsp::MergeFrom(const deal_cards_rsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_msg()) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (from.has_your_turn()) {
      set_your_turn(from.your_turn());
    }
    if (from.has_countdown()) {
      set_countdown(from.countdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void deal_cards_rsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void deal_cards_rsp::CopyFrom(const deal_cards_rsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deal_cards_rsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void deal_cards_rsp::Swap(deal_cards_rsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void deal_cards_rsp::InternalSwap(deal_cards_rsp* other) {
  std::swap(errorcode_, other->errorcode_);
  msg_.Swap(&other->msg_);
  std::swap(your_turn_, other->your_turn_);
  std::swap(countdown_, other->countdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata deal_cards_rsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = deal_cards_rsp_descriptor_;
  metadata.reflection = deal_cards_rsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// deal_cards_rsp

// required int32 errorcode = 1;
bool deal_cards_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void deal_cards_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void deal_cards_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void deal_cards_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 deal_cards_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.errorcode)
  return errorcode_;
}
 void deal_cards_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.errorcode)
}

// required string msg = 2;
bool deal_cards_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void deal_cards_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
void deal_cards_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
void deal_cards_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
 const ::std::string& deal_cards_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deal_cards_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.msg)
}
 void deal_cards_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.deal_cards_rsp.msg)
}
 void deal_cards_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.deal_cards_rsp.msg)
}
 ::std::string* deal_cards_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.deal_cards_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* deal_cards_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void deal_cards_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.deal_cards_rsp.msg)
}

// optional int32 your_turn = 3;
bool deal_cards_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void deal_cards_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
void deal_cards_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
void deal_cards_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
 ::google::protobuf::int32 deal_cards_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.your_turn)
  return your_turn_;
}
 void deal_cards_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.your_turn)
}

// optional int32 countdown = 4;
bool deal_cards_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void deal_cards_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
void deal_cards_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
void deal_cards_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
 ::google::protobuf::int32 deal_cards_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.countdown)
  return countdown_;
}
 void deal_cards_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.countdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace c2s

// @@protoc_insertion_point(global_scope)
