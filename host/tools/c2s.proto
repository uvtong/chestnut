syntax = "proto2";

package c2s;

// 0
message package {
	enum Type {    
    	REQUEST         = 0;
    	RESPONSE        = 1;
    };
	
	required Type type = 1;
	required int32 session = 2;
	required string tag = 3;
}

// 1
message account_req {
	required string account = 1;
	required string password = 2;
}

// 2
message account_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
}

// 3
message enter_room_req {
	required int32 rule = 1;
	required int32 mode = 2;
	required int32 scene = 3;
}

// 4
message enter_room_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
}

// 5
message ready_req {
	required int32 ready = 1;
}

// 6
message ready_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
	required int32 user_id = 3;
	repeated int32 mcards = 4;
	repeated int32 rcards = 5;
	repeated int32 lcards = 6;
	repeated int32 dcards = 7;
}

// 7
message mp_req {
	required int32 m = 1;
}

// 8 
message mp_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
	required int32 m = 3;
	repeated int32 mcards = 4;
	repeated int32 rcards = 5;
	repeated int32 lcards = 6;
	repeated int32 dcards = 7;
}

// 9
message am_req {
	required int32 m = 1;
}

// 10
message am_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
}

// 11
message rob_req {
	required int32 m = 1;
}

// 12
message rob_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
	required int32 your_turn = 3;	
	required int32 countdown = 4;
}

// 13
message lead_req {
	repeated int32 cards = 1;
}

// 14
message lead_rsp {
	message settlement {
		required int32 gold = 1;	
	}
	required int32 errorcode = 1;
	required string msg = 2;
	required int32 your_turn = 3;
	required int32 countdown = 4;
	optional settlement me = 5;
	optional settlement right = 6;
	optional settlement left = 7;
}

// 15 
message logout_req {
}

// 16
message logout_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
}

// 17
message deal_cards_req {
}

// 18
message deal_cards_rsp {
	required int32 errorcode = 1;
	required string msg = 2;
	optional int32 your_turn = 3;
	optional int32 countdown = 4;
}
