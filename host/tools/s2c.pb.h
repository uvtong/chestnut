// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2c.proto

#ifndef PROTOBUF_s2c_2eproto__INCLUDED
#define PROTOBUF_s2c_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace s2c {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_s2c_2eproto();
void protobuf_AssignDesc_s2c_2eproto();
void protobuf_ShutdownFile_s2c_2eproto();

class am_req;
class am_rsp;
class deal_cards_req;
class deal_cards_rsp;
class enter_room_req;
class enter_room_rsp;
class lead_req;
class mark_req;
class mark_rsp;
class mp_req;
class mp_rsp;
class package;
class ready_req;
class ready_rsp;
class req_turn_lead;
class resp_lead;
class resp_turn_lead;
class rob_req;
class rob_rsp;
class settlement;
class turn_rob_req;
class turn_rob_rsp;

enum package_Type {
  package_Type_REQUEST = 0,
  package_Type_RESPONSE = 1
};
bool package_Type_IsValid(int value);
const package_Type package_Type_Type_MIN = package_Type_REQUEST;
const package_Type package_Type_Type_MAX = package_Type_RESPONSE;
const int package_Type_Type_ARRAYSIZE = package_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* package_Type_descriptor();
inline const ::std::string& package_Type_Name(package_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    package_Type_descriptor(), value);
}
inline bool package_Type_Parse(
    const ::std::string& name, package_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<package_Type>(
    package_Type_descriptor(), name, value);
}
enum enter_room_req_Type {
  enter_room_req_Type_RIGHT = 1,
  enter_room_req_Type_LEFT = 0
};
bool enter_room_req_Type_IsValid(int value);
const enter_room_req_Type enter_room_req_Type_Type_MIN = enter_room_req_Type_LEFT;
const enter_room_req_Type enter_room_req_Type_Type_MAX = enter_room_req_Type_RIGHT;
const int enter_room_req_Type_Type_ARRAYSIZE = enter_room_req_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* enter_room_req_Type_descriptor();
inline const ::std::string& enter_room_req_Type_Name(enter_room_req_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    enter_room_req_Type_descriptor(), value);
}
inline bool enter_room_req_Type_Parse(
    const ::std::string& name, enter_room_req_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enter_room_req_Type>(
    enter_room_req_Type_descriptor(), name, value);
}
// ===================================================================

class package : public ::google::protobuf::Message {
 public:
  package();
  virtual ~package();

  package(const package& from);

  inline package& operator=(const package& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const package& default_instance();

  void Swap(package* other);

  // implements Message ----------------------------------------------

  inline package* New() const { return New(NULL); }

  package* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const package& from);
  void MergeFrom(const package& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef package_Type Type;
  static const Type REQUEST = package_Type_REQUEST;
  static const Type RESPONSE = package_Type_RESPONSE;
  static inline bool Type_IsValid(int value) {
    return package_Type_IsValid(value);
  }
  static const Type Type_MIN =
    package_Type_Type_MIN;
  static const Type Type_MAX =
    package_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    package_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return package_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return package_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return package_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 tag = 1;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 1;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // required .s2c.package.Type type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::s2c::package_Type type() const;
  void set_type(::s2c::package_Type value);

  // required int32 session = 3;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  ::google::protobuf::int32 session() const;
  void set_session(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.package)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_session();
  inline void clear_has_session();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tag_;
  int type_;
  ::google::protobuf::int32 session_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static package* default_instance_;
};
// -------------------------------------------------------------------

class enter_room_req : public ::google::protobuf::Message {
 public:
  enter_room_req();
  virtual ~enter_room_req();

  enter_room_req(const enter_room_req& from);

  inline enter_room_req& operator=(const enter_room_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_room_req& default_instance();

  void Swap(enter_room_req* other);

  // implements Message ----------------------------------------------

  inline enter_room_req* New() const { return New(NULL); }

  enter_room_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enter_room_req& from);
  void MergeFrom(const enter_room_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(enter_room_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef enter_room_req_Type Type;
  static const Type RIGHT = enter_room_req_Type_RIGHT;
  static const Type LEFT = enter_room_req_Type_LEFT;
  static inline bool Type_IsValid(int value) {
    return enter_room_req_Type_IsValid(value);
  }
  static const Type Type_MIN =
    enter_room_req_Type_Type_MIN;
  static const Type Type_MAX =
    enter_room_req_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    enter_room_req_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return enter_room_req_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return enter_room_req_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return enter_room_req_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .s2c.enter_room_req.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::s2c::enter_room_req_Type type() const;
  void set_type(::s2c::enter_room_req_Type value);

  // required int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // required string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:s2c.enter_room_req)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_name();
  inline void clear_has_name();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static enter_room_req* default_instance_;
};
// -------------------------------------------------------------------

class enter_room_rsp : public ::google::protobuf::Message {
 public:
  enter_room_rsp();
  virtual ~enter_room_rsp();

  enter_room_rsp(const enter_room_rsp& from);

  inline enter_room_rsp& operator=(const enter_room_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_room_rsp& default_instance();

  void Swap(enter_room_rsp* other);

  // implements Message ----------------------------------------------

  inline enter_room_rsp* New() const { return New(NULL); }

  enter_room_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enter_room_rsp& from);
  void MergeFrom(const enter_room_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(enter_room_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.enter_room_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static enter_room_rsp* default_instance_;
};
// -------------------------------------------------------------------

class ready_req : public ::google::protobuf::Message {
 public:
  ready_req();
  virtual ~ready_req();

  ready_req(const ready_req& from);

  inline ready_req& operator=(const ready_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ready_req& default_instance();

  void Swap(ready_req* other);

  // implements Message ----------------------------------------------

  inline ready_req* New() const { return New(NULL); }

  ready_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ready_req& from);
  void MergeFrom(const ready_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ready_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // required int32 ready = 3;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 3;
  ::google::protobuf::int32 ready() const;
  void set_ready(::google::protobuf::int32 value);

  // repeated int32 mcards = 4;
  int mcards_size() const;
  void clear_mcards();
  static const int kMcardsFieldNumber = 4;
  ::google::protobuf::int32 mcards(int index) const;
  void set_mcards(int index, ::google::protobuf::int32 value);
  void add_mcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mcards();

  // repeated int32 rcards = 5;
  int rcards_size() const;
  void clear_rcards();
  static const int kRcardsFieldNumber = 5;
  ::google::protobuf::int32 rcards(int index) const;
  void set_rcards(int index, ::google::protobuf::int32 value);
  void add_rcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rcards();

  // repeated int32 lcards = 6;
  int lcards_size() const;
  void clear_lcards();
  static const int kLcardsFieldNumber = 6;
  ::google::protobuf::int32 lcards(int index) const;
  void set_lcards(int index, ::google::protobuf::int32 value);
  void add_lcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcards();

  // repeated int32 dcards = 7;
  int dcards_size() const;
  void clear_dcards();
  static const int kDcardsFieldNumber = 7;
  ::google::protobuf::int32 dcards(int index) const;
  void set_dcards(int index, ::google::protobuf::int32 value);
  void add_dcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dcards();

  // optional int32 your_turn = 8;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 8;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // optional int32 countdown = 9;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 9;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.ready_req)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_ready();
  inline void clear_has_ready();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rcards_;
  ::google::protobuf::int32 ready_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dcards_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static ready_req* default_instance_;
};
// -------------------------------------------------------------------

class ready_rsp : public ::google::protobuf::Message {
 public:
  ready_rsp();
  virtual ~ready_rsp();

  ready_rsp(const ready_rsp& from);

  inline ready_rsp& operator=(const ready_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ready_rsp& default_instance();

  void Swap(ready_rsp* other);

  // implements Message ----------------------------------------------

  inline ready_rsp* New() const { return New(NULL); }

  ready_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ready_rsp& from);
  void MergeFrom(const ready_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ready_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.ready_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static ready_rsp* default_instance_;
};
// -------------------------------------------------------------------

class mp_req : public ::google::protobuf::Message {
 public:
  mp_req();
  virtual ~mp_req();

  mp_req(const mp_req& from);

  inline mp_req& operator=(const mp_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mp_req& default_instance();

  void Swap(mp_req* other);

  // implements Message ----------------------------------------------

  inline mp_req* New() const { return New(NULL); }

  mp_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mp_req& from);
  void MergeFrom(const mp_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mp_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // required int32 user_id_ = 2;
  bool has_user_id_() const;
  void clear_user_id_();
  static const int kUserIdFieldNumber_2 = 2;
  ::google::protobuf::int32 user_id_() const;
  void set_user_id_(::google::protobuf::int32 value);

  // required int32 m = 3;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 3;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // repeated int32 mcards = 4;
  int mcards_size() const;
  void clear_mcards();
  static const int kMcardsFieldNumber = 4;
  ::google::protobuf::int32 mcards(int index) const;
  void set_mcards(int index, ::google::protobuf::int32 value);
  void add_mcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mcards();

  // repeated int32 rcards = 5;
  int rcards_size() const;
  void clear_rcards();
  static const int kRcardsFieldNumber = 5;
  ::google::protobuf::int32 rcards(int index) const;
  void set_rcards(int index, ::google::protobuf::int32 value);
  void add_rcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rcards();

  // repeated int32 lcards = 6;
  int lcards_size() const;
  void clear_lcards();
  static const int kLcardsFieldNumber = 6;
  ::google::protobuf::int32 lcards(int index) const;
  void set_lcards(int index, ::google::protobuf::int32 value);
  void add_lcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcards();

  // repeated int32 dcards = 7;
  int dcards_size() const;
  void clear_dcards();
  static const int kDcardsFieldNumber = 7;
  ::google::protobuf::int32 dcards(int index) const;
  void set_dcards(int index, ::google::protobuf::int32 value);
  void add_dcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dcards();

  // @@protoc_insertion_point(class_scope:s2c.mp_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_id_();
  inline void clear_has_user_id_();
  inline void set_has_m();
  inline void clear_has_m();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 user_id__;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dcards_;
  ::google::protobuf::int32 m_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static mp_req* default_instance_;
};
// -------------------------------------------------------------------

class mp_rsp : public ::google::protobuf::Message {
 public:
  mp_rsp();
  virtual ~mp_rsp();

  mp_rsp(const mp_rsp& from);

  inline mp_rsp& operator=(const mp_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mp_rsp& default_instance();

  void Swap(mp_rsp* other);

  // implements Message ----------------------------------------------

  inline mp_rsp* New() const { return New(NULL); }

  mp_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mp_rsp& from);
  void MergeFrom(const mp_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mp_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.mp_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static mp_rsp* default_instance_;
};
// -------------------------------------------------------------------

class deal_cards_req : public ::google::protobuf::Message {
 public:
  deal_cards_req();
  virtual ~deal_cards_req();

  deal_cards_req(const deal_cards_req& from);

  inline deal_cards_req& operator=(const deal_cards_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const deal_cards_req& default_instance();

  void Swap(deal_cards_req* other);

  // implements Message ----------------------------------------------

  inline deal_cards_req* New() const { return New(NULL); }

  deal_cards_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const deal_cards_req& from);
  void MergeFrom(const deal_cards_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(deal_cards_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 your_turn = 3;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 3;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // optional int32 countdown = 4;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 4;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.deal_cards_req)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static deal_cards_req* default_instance_;
};
// -------------------------------------------------------------------

class deal_cards_rsp : public ::google::protobuf::Message {
 public:
  deal_cards_rsp();
  virtual ~deal_cards_rsp();

  deal_cards_rsp(const deal_cards_rsp& from);

  inline deal_cards_rsp& operator=(const deal_cards_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const deal_cards_rsp& default_instance();

  void Swap(deal_cards_rsp* other);

  // implements Message ----------------------------------------------

  inline deal_cards_rsp* New() const { return New(NULL); }

  deal_cards_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const deal_cards_rsp& from);
  void MergeFrom(const deal_cards_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(deal_cards_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.deal_cards_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static deal_cards_rsp* default_instance_;
};
// -------------------------------------------------------------------

class rob_req : public ::google::protobuf::Message {
 public:
  rob_req();
  virtual ~rob_req();

  rob_req(const rob_req& from);

  inline rob_req& operator=(const rob_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rob_req& default_instance();

  void Swap(rob_req* other);

  // implements Message ----------------------------------------------

  inline rob_req* New() const { return New(NULL); }

  rob_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rob_req& from);
  void MergeFrom(const rob_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rob_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // required int32 m = 3;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 3;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // required int32 your_turn = 4;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 4;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // required int32 countdown = 5;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 5;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.rob_req)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_m();
  inline void clear_has_m();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 m_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static rob_req* default_instance_;
};
// -------------------------------------------------------------------

class rob_rsp : public ::google::protobuf::Message {
 public:
  rob_rsp();
  virtual ~rob_rsp();

  rob_rsp(const rob_rsp& from);

  inline rob_rsp& operator=(const rob_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rob_rsp& default_instance();

  void Swap(rob_rsp* other);

  // implements Message ----------------------------------------------

  inline rob_rsp* New() const { return New(NULL); }

  rob_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rob_rsp& from);
  void MergeFrom(const rob_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rob_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.rob_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static rob_rsp* default_instance_;
};
// -------------------------------------------------------------------

class turn_rob_req : public ::google::protobuf::Message {
 public:
  turn_rob_req();
  virtual ~turn_rob_req();

  turn_rob_req(const turn_rob_req& from);

  inline turn_rob_req& operator=(const turn_rob_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const turn_rob_req& default_instance();

  void Swap(turn_rob_req* other);

  // implements Message ----------------------------------------------

  inline turn_rob_req* New() const { return New(NULL); }

  turn_rob_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const turn_rob_req& from);
  void MergeFrom(const turn_rob_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(turn_rob_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:s2c.turn_rob_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static turn_rob_req* default_instance_;
};
// -------------------------------------------------------------------

class turn_rob_rsp : public ::google::protobuf::Message {
 public:
  turn_rob_rsp();
  virtual ~turn_rob_rsp();

  turn_rob_rsp(const turn_rob_rsp& from);

  inline turn_rob_rsp& operator=(const turn_rob_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const turn_rob_rsp& default_instance();

  void Swap(turn_rob_rsp* other);

  // implements Message ----------------------------------------------

  inline turn_rob_rsp* New() const { return New(NULL); }

  turn_rob_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const turn_rob_rsp& from);
  void MergeFrom(const turn_rob_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(turn_rob_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:s2c.turn_rob_rsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static turn_rob_rsp* default_instance_;
};
// -------------------------------------------------------------------

class mark_req : public ::google::protobuf::Message {
 public:
  mark_req();
  virtual ~mark_req();

  mark_req(const mark_req& from);

  inline mark_req& operator=(const mark_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mark_req& default_instance();

  void Swap(mark_req* other);

  // implements Message ----------------------------------------------

  inline mark_req* New() const { return New(NULL); }

  mark_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mark_req& from);
  void MergeFrom(const mark_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mark_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.mark_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 user_id_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static mark_req* default_instance_;
};
// -------------------------------------------------------------------

class mark_rsp : public ::google::protobuf::Message {
 public:
  mark_rsp();
  virtual ~mark_rsp();

  mark_rsp(const mark_rsp& from);

  inline mark_rsp& operator=(const mark_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mark_rsp& default_instance();

  void Swap(mark_rsp* other);

  // implements Message ----------------------------------------------

  inline mark_rsp* New() const { return New(NULL); }

  mark_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mark_rsp& from);
  void MergeFrom(const mark_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mark_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.mark_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static mark_rsp* default_instance_;
};
// -------------------------------------------------------------------

class settlement : public ::google::protobuf::Message {
 public:
  settlement();
  virtual ~settlement();

  settlement(const settlement& from);

  inline settlement& operator=(const settlement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const settlement& default_instance();

  void Swap(settlement* other);

  // implements Message ----------------------------------------------

  inline settlement* New() const { return New(NULL); }

  settlement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const settlement& from);
  void MergeFrom(const settlement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(settlement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gold = 1;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 1;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.settlement)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gold_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static settlement* default_instance_;
};
// -------------------------------------------------------------------

class lead_req : public ::google::protobuf::Message {
 public:
  lead_req();
  virtual ~lead_req();

  lead_req(const lead_req& from);

  inline lead_req& operator=(const lead_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const lead_req& default_instance();

  void Swap(lead_req* other);

  // implements Message ----------------------------------------------

  inline lead_req* New() const { return New(NULL); }

  lead_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lead_req& from);
  void MergeFrom(const lead_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lead_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required int32 user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // repeated int32 cards = 3;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 3;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // required int32 your_turn = 4;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 4;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // required int32 countdown = 5;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 5;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // optional .s2c.settlement me = 6;
  bool has_me() const;
  void clear_me();
  static const int kMeFieldNumber = 6;
  const ::s2c::settlement& me() const;
  ::s2c::settlement* mutable_me();
  ::s2c::settlement* release_me();
  void set_allocated_me(::s2c::settlement* me);

  // optional .s2c.settlement right = 7;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 7;
  const ::s2c::settlement& right() const;
  ::s2c::settlement* mutable_right();
  ::s2c::settlement* release_right();
  void set_allocated_right(::s2c::settlement* right);

  // optional .s2c.settlement left = 8;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 8;
  const ::s2c::settlement& left() const;
  ::s2c::settlement* mutable_left();
  ::s2c::settlement* release_left();
  void set_allocated_left(::s2c::settlement* left);

  // @@protoc_insertion_point(class_scope:s2c.lead_req)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_me();
  inline void clear_has_me();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_left();
  inline void clear_has_left();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::int32 countdown_;
  ::s2c::settlement* me_;
  ::s2c::settlement* right_;
  ::s2c::settlement* left_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static lead_req* default_instance_;
};
// -------------------------------------------------------------------

class resp_lead : public ::google::protobuf::Message {
 public:
  resp_lead();
  virtual ~resp_lead();

  resp_lead(const resp_lead& from);

  inline resp_lead& operator=(const resp_lead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const resp_lead& default_instance();

  void Swap(resp_lead* other);

  // implements Message ----------------------------------------------

  inline resp_lead* New() const { return New(NULL); }

  resp_lead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const resp_lead& from);
  void MergeFrom(const resp_lead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(resp_lead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.resp_lead)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static resp_lead* default_instance_;
};
// -------------------------------------------------------------------

class req_turn_lead : public ::google::protobuf::Message {
 public:
  req_turn_lead();
  virtual ~req_turn_lead();

  req_turn_lead(const req_turn_lead& from);

  inline req_turn_lead& operator=(const req_turn_lead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const req_turn_lead& default_instance();

  void Swap(req_turn_lead* other);

  // implements Message ----------------------------------------------

  inline req_turn_lead* New() const { return New(NULL); }

  req_turn_lead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const req_turn_lead& from);
  void MergeFrom(const req_turn_lead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(req_turn_lead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:s2c.req_turn_lead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static req_turn_lead* default_instance_;
};
// -------------------------------------------------------------------

class resp_turn_lead : public ::google::protobuf::Message {
 public:
  resp_turn_lead();
  virtual ~resp_turn_lead();

  resp_turn_lead(const resp_turn_lead& from);

  inline resp_turn_lead& operator=(const resp_turn_lead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const resp_turn_lead& default_instance();

  void Swap(resp_turn_lead* other);

  // implements Message ----------------------------------------------

  inline resp_turn_lead* New() const { return New(NULL); }

  resp_turn_lead* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const resp_turn_lead& from);
  void MergeFrom(const resp_turn_lead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(resp_turn_lead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:s2c.resp_turn_lead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static resp_turn_lead* default_instance_;
};
// -------------------------------------------------------------------

class am_req : public ::google::protobuf::Message {
 public:
  am_req();
  virtual ~am_req();

  am_req(const am_req& from);

  inline am_req& operator=(const am_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const am_req& default_instance();

  void Swap(am_req* other);

  // implements Message ----------------------------------------------

  inline am_req* New() const { return New(NULL); }

  am_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const am_req& from);
  void MergeFrom(const am_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(am_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // required int32 m = 2;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 2;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:s2c.am_req)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_m();
  inline void clear_has_m();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 m_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static am_req* default_instance_;
};
// -------------------------------------------------------------------

class am_rsp : public ::google::protobuf::Message {
 public:
  am_rsp();
  virtual ~am_rsp();

  am_rsp(const am_rsp& from);

  inline am_rsp& operator=(const am_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const am_rsp& default_instance();

  void Swap(am_rsp* other);

  // implements Message ----------------------------------------------

  inline am_rsp* New() const { return New(NULL); }

  am_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const am_rsp& from);
  void MergeFrom(const am_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(am_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:s2c.am_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_s2c_2eproto();
  friend void protobuf_AssignDesc_s2c_2eproto();
  friend void protobuf_ShutdownFile_s2c_2eproto();

  void InitAsDefaultInstance();
  static am_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// package

// required int32 tag = 1;
inline bool package::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void package::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void package::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void package::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 package::tag() const {
  // @@protoc_insertion_point(field_get:s2c.package.tag)
  return tag_;
}
inline void package::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:s2c.package.tag)
}

// required .s2c.package.Type type = 2;
inline bool package::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void package::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void package::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void package::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::s2c::package_Type package::type() const {
  // @@protoc_insertion_point(field_get:s2c.package.type)
  return static_cast< ::s2c::package_Type >(type_);
}
inline void package::set_type(::s2c::package_Type value) {
  assert(::s2c::package_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:s2c.package.type)
}

// required int32 session = 3;
inline bool package::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void package::set_has_session() {
  _has_bits_[0] |= 0x00000004u;
}
inline void package::clear_has_session() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void package::clear_session() {
  session_ = 0;
  clear_has_session();
}
inline ::google::protobuf::int32 package::session() const {
  // @@protoc_insertion_point(field_get:s2c.package.session)
  return session_;
}
inline void package::set_session(::google::protobuf::int32 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:s2c.package.session)
}

// -------------------------------------------------------------------

// enter_room_req

// required .s2c.enter_room_req.Type type = 1;
inline bool enter_room_req::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_room_req::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_room_req::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_room_req::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::s2c::enter_room_req_Type enter_room_req::type() const {
  // @@protoc_insertion_point(field_get:s2c.enter_room_req.type)
  return static_cast< ::s2c::enter_room_req_Type >(type_);
}
inline void enter_room_req::set_type(::s2c::enter_room_req_Type value) {
  assert(::s2c::enter_room_req_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:s2c.enter_room_req.type)
}

// required int32 user_id = 2;
inline bool enter_room_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void enter_room_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void enter_room_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void enter_room_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 enter_room_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.enter_room_req.user_id)
  return user_id_;
}
inline void enter_room_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.enter_room_req.user_id)
}

// required string name = 3;
inline bool enter_room_req::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void enter_room_req::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void enter_room_req::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void enter_room_req::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& enter_room_req::name() const {
  // @@protoc_insertion_point(field_get:s2c.enter_room_req.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_req::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.enter_room_req.name)
}
inline void enter_room_req::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.enter_room_req.name)
}
inline void enter_room_req::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.enter_room_req.name)
}
inline ::std::string* enter_room_req::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:s2c.enter_room_req.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* enter_room_req::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_req::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:s2c.enter_room_req.name)
}

// -------------------------------------------------------------------

// enter_room_rsp

// required int32 errorcode = 1;
inline bool enter_room_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_room_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_room_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_room_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 enter_room_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.enter_room_rsp.errorcode)
  return errorcode_;
}
inline void enter_room_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.enter_room_rsp.errorcode)
}

// required string msg = 2;
inline bool enter_room_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void enter_room_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void enter_room_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void enter_room_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& enter_room_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.enter_room_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.enter_room_rsp.msg)
}
inline void enter_room_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.enter_room_rsp.msg)
}
inline void enter_room_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.enter_room_rsp.msg)
}
inline ::std::string* enter_room_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.enter_room_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* enter_room_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.enter_room_rsp.msg)
}

// -------------------------------------------------------------------

// ready_req

// required int32 errorcode = 1;
inline bool ready_req::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ready_req::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ready_req::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ready_req::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 ready_req::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.errorcode)
  return errorcode_;
}
inline void ready_req::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_req.errorcode)
}

// required int32 user_id = 2;
inline bool ready_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ready_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ready_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ready_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 ready_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.user_id)
  return user_id_;
}
inline void ready_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_req.user_id)
}

// required int32 ready = 3;
inline bool ready_req::has_ready() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ready_req::set_has_ready() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ready_req::clear_has_ready() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ready_req::clear_ready() {
  ready_ = 0;
  clear_has_ready();
}
inline ::google::protobuf::int32 ready_req::ready() const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.ready)
  return ready_;
}
inline void ready_req::set_ready(::google::protobuf::int32 value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_req.ready)
}

// repeated int32 mcards = 4;
inline int ready_req::mcards_size() const {
  return mcards_.size();
}
inline void ready_req::clear_mcards() {
  mcards_.Clear();
}
inline ::google::protobuf::int32 ready_req::mcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.mcards)
  return mcards_.Get(index);
}
inline void ready_req::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.ready_req.mcards)
}
inline void ready_req::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.ready_req.mcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_req::mcards() const {
  // @@protoc_insertion_point(field_list:s2c.ready_req.mcards)
  return mcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_req::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.ready_req.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
inline int ready_req::rcards_size() const {
  return rcards_.size();
}
inline void ready_req::clear_rcards() {
  rcards_.Clear();
}
inline ::google::protobuf::int32 ready_req::rcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.rcards)
  return rcards_.Get(index);
}
inline void ready_req::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.ready_req.rcards)
}
inline void ready_req::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.ready_req.rcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_req::rcards() const {
  // @@protoc_insertion_point(field_list:s2c.ready_req.rcards)
  return rcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_req::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.ready_req.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
inline int ready_req::lcards_size() const {
  return lcards_.size();
}
inline void ready_req::clear_lcards() {
  lcards_.Clear();
}
inline ::google::protobuf::int32 ready_req::lcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.lcards)
  return lcards_.Get(index);
}
inline void ready_req::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.ready_req.lcards)
}
inline void ready_req::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.ready_req.lcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_req::lcards() const {
  // @@protoc_insertion_point(field_list:s2c.ready_req.lcards)
  return lcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_req::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.ready_req.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
inline int ready_req::dcards_size() const {
  return dcards_.size();
}
inline void ready_req::clear_dcards() {
  dcards_.Clear();
}
inline ::google::protobuf::int32 ready_req::dcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.dcards)
  return dcards_.Get(index);
}
inline void ready_req::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.ready_req.dcards)
}
inline void ready_req::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.ready_req.dcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_req::dcards() const {
  // @@protoc_insertion_point(field_list:s2c.ready_req.dcards)
  return dcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_req::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.ready_req.dcards)
  return &dcards_;
}

// optional int32 your_turn = 8;
inline bool ready_req::has_your_turn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ready_req::set_has_your_turn() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ready_req::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ready_req::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 ready_req::your_turn() const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.your_turn)
  return your_turn_;
}
inline void ready_req::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_req.your_turn)
}

// optional int32 countdown = 9;
inline bool ready_req::has_countdown() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ready_req::set_has_countdown() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ready_req::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ready_req::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 ready_req::countdown() const {
  // @@protoc_insertion_point(field_get:s2c.ready_req.countdown)
  return countdown_;
}
inline void ready_req::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_req.countdown)
}

// -------------------------------------------------------------------

// ready_rsp

// required int32 errorcode = 1;
inline bool ready_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ready_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ready_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ready_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 ready_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.ready_rsp.errorcode)
  return errorcode_;
}
inline void ready_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.ready_rsp.errorcode)
}

// required string msg = 2;
inline bool ready_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ready_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ready_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ready_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ready_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.ready_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ready_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.ready_rsp.msg)
}
inline void ready_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.ready_rsp.msg)
}
inline void ready_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.ready_rsp.msg)
}
inline ::std::string* ready_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.ready_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ready_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ready_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.ready_rsp.msg)
}

// -------------------------------------------------------------------

// mp_req

// required int32 user_id = 1;
inline bool mp_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mp_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mp_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mp_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 mp_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.user_id)
  return user_id_;
}
inline void mp_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.mp_req.user_id)
}

// required int32 user_id_ = 2;
inline bool mp_req::has_user_id_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mp_req::set_has_user_id_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mp_req::clear_has_user_id_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mp_req::clear_user_id_() {
  user_id__ = 0;
  clear_has_user_id_();
}
inline ::google::protobuf::int32 mp_req::user_id_() const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.user_id_)
  return user_id__;
}
inline void mp_req::set_user_id_(::google::protobuf::int32 value) {
  set_has_user_id_();
  user_id__ = value;
  // @@protoc_insertion_point(field_set:s2c.mp_req.user_id_)
}

// required int32 m = 3;
inline bool mp_req::has_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mp_req::set_has_m() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mp_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mp_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 mp_req::m() const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.m)
  return m_;
}
inline void mp_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:s2c.mp_req.m)
}

// repeated int32 mcards = 4;
inline int mp_req::mcards_size() const {
  return mcards_.size();
}
inline void mp_req::clear_mcards() {
  mcards_.Clear();
}
inline ::google::protobuf::int32 mp_req::mcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.mcards)
  return mcards_.Get(index);
}
inline void mp_req::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.mp_req.mcards)
}
inline void mp_req::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.mp_req.mcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_req::mcards() const {
  // @@protoc_insertion_point(field_list:s2c.mp_req.mcards)
  return mcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_req::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.mp_req.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
inline int mp_req::rcards_size() const {
  return rcards_.size();
}
inline void mp_req::clear_rcards() {
  rcards_.Clear();
}
inline ::google::protobuf::int32 mp_req::rcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.rcards)
  return rcards_.Get(index);
}
inline void mp_req::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.mp_req.rcards)
}
inline void mp_req::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.mp_req.rcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_req::rcards() const {
  // @@protoc_insertion_point(field_list:s2c.mp_req.rcards)
  return rcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_req::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.mp_req.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
inline int mp_req::lcards_size() const {
  return lcards_.size();
}
inline void mp_req::clear_lcards() {
  lcards_.Clear();
}
inline ::google::protobuf::int32 mp_req::lcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.lcards)
  return lcards_.Get(index);
}
inline void mp_req::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.mp_req.lcards)
}
inline void mp_req::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.mp_req.lcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_req::lcards() const {
  // @@protoc_insertion_point(field_list:s2c.mp_req.lcards)
  return lcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_req::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.mp_req.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
inline int mp_req::dcards_size() const {
  return dcards_.size();
}
inline void mp_req::clear_dcards() {
  dcards_.Clear();
}
inline ::google::protobuf::int32 mp_req::dcards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.mp_req.dcards)
  return dcards_.Get(index);
}
inline void mp_req::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.mp_req.dcards)
}
inline void mp_req::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.mp_req.dcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_req::dcards() const {
  // @@protoc_insertion_point(field_list:s2c.mp_req.dcards)
  return dcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_req::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.mp_req.dcards)
  return &dcards_;
}

// -------------------------------------------------------------------

// mp_rsp

// required int32 errorcode = 1;
inline bool mp_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mp_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mp_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mp_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 mp_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.mp_rsp.errorcode)
  return errorcode_;
}
inline void mp_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.mp_rsp.errorcode)
}

// required string msg = 2;
inline bool mp_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mp_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mp_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mp_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& mp_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.mp_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mp_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.mp_rsp.msg)
}
inline void mp_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.mp_rsp.msg)
}
inline void mp_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.mp_rsp.msg)
}
inline ::std::string* mp_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.mp_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mp_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mp_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.mp_rsp.msg)
}

// -------------------------------------------------------------------

// deal_cards_req

// required int32 errorcode = 1;
inline bool deal_cards_req::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void deal_cards_req::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void deal_cards_req::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void deal_cards_req::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 deal_cards_req::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_req.errorcode)
  return errorcode_;
}
inline void deal_cards_req::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.deal_cards_req.errorcode)
}

// required string msg = 2;
inline bool deal_cards_req::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void deal_cards_req::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void deal_cards_req::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void deal_cards_req::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& deal_cards_req::msg() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_req.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_req::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.deal_cards_req.msg)
}
inline void deal_cards_req::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.deal_cards_req.msg)
}
inline void deal_cards_req::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.deal_cards_req.msg)
}
inline ::std::string* deal_cards_req::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.deal_cards_req.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* deal_cards_req::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_req::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.deal_cards_req.msg)
}

// optional int32 your_turn = 3;
inline bool deal_cards_req::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void deal_cards_req::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void deal_cards_req::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void deal_cards_req::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 deal_cards_req::your_turn() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_req.your_turn)
  return your_turn_;
}
inline void deal_cards_req::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:s2c.deal_cards_req.your_turn)
}

// optional int32 countdown = 4;
inline bool deal_cards_req::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void deal_cards_req::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void deal_cards_req::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void deal_cards_req::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 deal_cards_req::countdown() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_req.countdown)
  return countdown_;
}
inline void deal_cards_req::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:s2c.deal_cards_req.countdown)
}

// -------------------------------------------------------------------

// deal_cards_rsp

// required int32 errorcode = 1;
inline bool deal_cards_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void deal_cards_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void deal_cards_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void deal_cards_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 deal_cards_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_rsp.errorcode)
  return errorcode_;
}
inline void deal_cards_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.deal_cards_rsp.errorcode)
}

// required string msg = 2;
inline bool deal_cards_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void deal_cards_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void deal_cards_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void deal_cards_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& deal_cards_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.deal_cards_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.deal_cards_rsp.msg)
}
inline void deal_cards_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.deal_cards_rsp.msg)
}
inline void deal_cards_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.deal_cards_rsp.msg)
}
inline ::std::string* deal_cards_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.deal_cards_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* deal_cards_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.deal_cards_rsp.msg)
}

// -------------------------------------------------------------------

// rob_req

// required int32 errorcode = 1;
inline bool rob_req::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rob_req::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rob_req::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rob_req::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 rob_req::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.rob_req.errorcode)
  return errorcode_;
}
inline void rob_req::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_req.errorcode)
}

// required int32 user_id = 2;
inline bool rob_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rob_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rob_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rob_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 rob_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.rob_req.user_id)
  return user_id_;
}
inline void rob_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_req.user_id)
}

// required int32 m = 3;
inline bool rob_req::has_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rob_req::set_has_m() {
  _has_bits_[0] |= 0x00000004u;
}
inline void rob_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void rob_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 rob_req::m() const {
  // @@protoc_insertion_point(field_get:s2c.rob_req.m)
  return m_;
}
inline void rob_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_req.m)
}

// required int32 your_turn = 4;
inline bool rob_req::has_your_turn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void rob_req::set_has_your_turn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void rob_req::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void rob_req::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 rob_req::your_turn() const {
  // @@protoc_insertion_point(field_get:s2c.rob_req.your_turn)
  return your_turn_;
}
inline void rob_req::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_req.your_turn)
}

// required int32 countdown = 5;
inline bool rob_req::has_countdown() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void rob_req::set_has_countdown() {
  _has_bits_[0] |= 0x00000010u;
}
inline void rob_req::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void rob_req::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 rob_req::countdown() const {
  // @@protoc_insertion_point(field_get:s2c.rob_req.countdown)
  return countdown_;
}
inline void rob_req::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_req.countdown)
}

// -------------------------------------------------------------------

// rob_rsp

// required int32 errorcode = 1;
inline bool rob_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rob_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rob_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rob_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 rob_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.rob_rsp.errorcode)
  return errorcode_;
}
inline void rob_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.rob_rsp.errorcode)
}

// required string msg = 2;
inline bool rob_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rob_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rob_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rob_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& rob_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.rob_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rob_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.rob_rsp.msg)
}
inline void rob_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.rob_rsp.msg)
}
inline void rob_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.rob_rsp.msg)
}
inline ::std::string* rob_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.rob_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rob_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rob_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.rob_rsp.msg)
}

// -------------------------------------------------------------------

// turn_rob_req

// -------------------------------------------------------------------

// turn_rob_rsp

// -------------------------------------------------------------------

// mark_req

// required int32 user_id = 1;
inline bool mark_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mark_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mark_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mark_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 mark_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.mark_req.user_id)
  return user_id_;
}
inline void mark_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.mark_req.user_id)
}

// -------------------------------------------------------------------

// mark_rsp

// required int32 errorcode = 1;
inline bool mark_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mark_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mark_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mark_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 mark_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.mark_rsp.errorcode)
  return errorcode_;
}
inline void mark_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.mark_rsp.errorcode)
}

// required string msg = 2;
inline bool mark_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mark_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mark_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mark_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& mark_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.mark_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mark_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.mark_rsp.msg)
}
inline void mark_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.mark_rsp.msg)
}
inline void mark_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.mark_rsp.msg)
}
inline ::std::string* mark_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.mark_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mark_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mark_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.mark_rsp.msg)
}

// -------------------------------------------------------------------

// settlement

// required int32 gold = 1;
inline bool settlement::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void settlement::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void settlement::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void settlement::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 settlement::gold() const {
  // @@protoc_insertion_point(field_get:s2c.settlement.gold)
  return gold_;
}
inline void settlement::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:s2c.settlement.gold)
}

// -------------------------------------------------------------------

// lead_req

// required int32 errorcode = 1;
inline bool lead_req::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void lead_req::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void lead_req::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void lead_req::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 lead_req::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.errorcode)
  return errorcode_;
}
inline void lead_req::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.lead_req.errorcode)
}

// required int32 user_id = 2;
inline bool lead_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void lead_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void lead_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void lead_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 lead_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.user_id)
  return user_id_;
}
inline void lead_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.lead_req.user_id)
}

// repeated int32 cards = 3;
inline int lead_req::cards_size() const {
  return cards_.size();
}
inline void lead_req::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 lead_req::cards(int index) const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.cards)
  return cards_.Get(index);
}
inline void lead_req::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:s2c.lead_req.cards)
}
inline void lead_req::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:s2c.lead_req.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
lead_req::cards() const {
  // @@protoc_insertion_point(field_list:s2c.lead_req.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
lead_req::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:s2c.lead_req.cards)
  return &cards_;
}

// required int32 your_turn = 4;
inline bool lead_req::has_your_turn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void lead_req::set_has_your_turn() {
  _has_bits_[0] |= 0x00000008u;
}
inline void lead_req::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void lead_req::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 lead_req::your_turn() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.your_turn)
  return your_turn_;
}
inline void lead_req::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:s2c.lead_req.your_turn)
}

// required int32 countdown = 5;
inline bool lead_req::has_countdown() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void lead_req::set_has_countdown() {
  _has_bits_[0] |= 0x00000010u;
}
inline void lead_req::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void lead_req::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 lead_req::countdown() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.countdown)
  return countdown_;
}
inline void lead_req::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:s2c.lead_req.countdown)
}

// optional .s2c.settlement me = 6;
inline bool lead_req::has_me() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void lead_req::set_has_me() {
  _has_bits_[0] |= 0x00000020u;
}
inline void lead_req::clear_has_me() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void lead_req::clear_me() {
  if (me_ != NULL) me_->::s2c::settlement::Clear();
  clear_has_me();
}
inline const ::s2c::settlement& lead_req::me() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.me)
  return me_ != NULL ? *me_ : *default_instance_->me_;
}
inline ::s2c::settlement* lead_req::mutable_me() {
  set_has_me();
  if (me_ == NULL) {
    me_ = new ::s2c::settlement;
  }
  // @@protoc_insertion_point(field_mutable:s2c.lead_req.me)
  return me_;
}
inline ::s2c::settlement* lead_req::release_me() {
  clear_has_me();
  ::s2c::settlement* temp = me_;
  me_ = NULL;
  return temp;
}
inline void lead_req::set_allocated_me(::s2c::settlement* me) {
  delete me_;
  me_ = me;
  if (me) {
    set_has_me();
  } else {
    clear_has_me();
  }
  // @@protoc_insertion_point(field_set_allocated:s2c.lead_req.me)
}

// optional .s2c.settlement right = 7;
inline bool lead_req::has_right() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void lead_req::set_has_right() {
  _has_bits_[0] |= 0x00000040u;
}
inline void lead_req::clear_has_right() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void lead_req::clear_right() {
  if (right_ != NULL) right_->::s2c::settlement::Clear();
  clear_has_right();
}
inline const ::s2c::settlement& lead_req::right() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.right)
  return right_ != NULL ? *right_ : *default_instance_->right_;
}
inline ::s2c::settlement* lead_req::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::s2c::settlement;
  }
  // @@protoc_insertion_point(field_mutable:s2c.lead_req.right)
  return right_;
}
inline ::s2c::settlement* lead_req::release_right() {
  clear_has_right();
  ::s2c::settlement* temp = right_;
  right_ = NULL;
  return temp;
}
inline void lead_req::set_allocated_right(::s2c::settlement* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:s2c.lead_req.right)
}

// optional .s2c.settlement left = 8;
inline bool lead_req::has_left() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void lead_req::set_has_left() {
  _has_bits_[0] |= 0x00000080u;
}
inline void lead_req::clear_has_left() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void lead_req::clear_left() {
  if (left_ != NULL) left_->::s2c::settlement::Clear();
  clear_has_left();
}
inline const ::s2c::settlement& lead_req::left() const {
  // @@protoc_insertion_point(field_get:s2c.lead_req.left)
  return left_ != NULL ? *left_ : *default_instance_->left_;
}
inline ::s2c::settlement* lead_req::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::s2c::settlement;
  }
  // @@protoc_insertion_point(field_mutable:s2c.lead_req.left)
  return left_;
}
inline ::s2c::settlement* lead_req::release_left() {
  clear_has_left();
  ::s2c::settlement* temp = left_;
  left_ = NULL;
  return temp;
}
inline void lead_req::set_allocated_left(::s2c::settlement* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:s2c.lead_req.left)
}

// -------------------------------------------------------------------

// resp_lead

// required int32 errorcode = 1;
inline bool resp_lead::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void resp_lead::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void resp_lead::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void resp_lead::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 resp_lead::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.resp_lead.errorcode)
  return errorcode_;
}
inline void resp_lead::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.resp_lead.errorcode)
}

// required string msg = 2;
inline bool resp_lead::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void resp_lead::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void resp_lead::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void resp_lead::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& resp_lead::msg() const {
  // @@protoc_insertion_point(field_get:s2c.resp_lead.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void resp_lead::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.resp_lead.msg)
}
inline void resp_lead::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.resp_lead.msg)
}
inline void resp_lead::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.resp_lead.msg)
}
inline ::std::string* resp_lead::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.resp_lead.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* resp_lead::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void resp_lead::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.resp_lead.msg)
}

// -------------------------------------------------------------------

// req_turn_lead

// -------------------------------------------------------------------

// resp_turn_lead

// -------------------------------------------------------------------

// am_req

// required int32 user_id = 1;
inline bool am_req::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void am_req::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void am_req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void am_req::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 am_req::user_id() const {
  // @@protoc_insertion_point(field_get:s2c.am_req.user_id)
  return user_id_;
}
inline void am_req::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:s2c.am_req.user_id)
}

// required int32 m = 2;
inline bool am_req::has_m() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void am_req::set_has_m() {
  _has_bits_[0] |= 0x00000002u;
}
inline void am_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void am_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 am_req::m() const {
  // @@protoc_insertion_point(field_get:s2c.am_req.m)
  return m_;
}
inline void am_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:s2c.am_req.m)
}

// -------------------------------------------------------------------

// am_rsp

// required int32 errorcode = 1;
inline bool am_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void am_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void am_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void am_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 am_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:s2c.am_rsp.errorcode)
  return errorcode_;
}
inline void am_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:s2c.am_rsp.errorcode)
}

// required string msg = 2;
inline bool am_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void am_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void am_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void am_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& am_rsp::msg() const {
  // @@protoc_insertion_point(field_get:s2c.am_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void am_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:s2c.am_rsp.msg)
}
inline void am_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:s2c.am_rsp.msg)
}
inline void am_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:s2c.am_rsp.msg)
}
inline ::std::string* am_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:s2c.am_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* am_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void am_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:s2c.am_rsp.msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace s2c

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::s2c::package_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::s2c::package_Type>() {
  return ::s2c::package_Type_descriptor();
}
template <> struct is_proto_enum< ::s2c::enter_room_req_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::s2c::enter_room_req_Type>() {
  return ::s2c::enter_room_req_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_s2c_2eproto__INCLUDED
