// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

#ifndef PROTOBUF_c2s_2eproto__INCLUDED
#define PROTOBUF_c2s_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace c2s {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_c2s_2eproto();
void protobuf_AssignDesc_c2s_2eproto();
void protobuf_ShutdownFile_c2s_2eproto();

class account_req;
class account_rsp;
class am_req;
class am_rsp;
class deal_cards_req;
class deal_cards_rsp;
class enter_room_req;
class enter_room_rsp;
class lead_req;
class lead_rsp;
class lead_rsp_settlement;
class logout_req;
class logout_rsp;
class mp_req;
class mp_rsp;
class package;
class ready_req;
class ready_rsp;
class rob_req;
class rob_rsp;

enum package_Type {
  package_Type_REQUEST = 0,
  package_Type_RESPONSE = 1
};
bool package_Type_IsValid(int value);
const package_Type package_Type_Type_MIN = package_Type_REQUEST;
const package_Type package_Type_Type_MAX = package_Type_RESPONSE;
const int package_Type_Type_ARRAYSIZE = package_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* package_Type_descriptor();
inline const ::std::string& package_Type_Name(package_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    package_Type_descriptor(), value);
}
inline bool package_Type_Parse(
    const ::std::string& name, package_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<package_Type>(
    package_Type_descriptor(), name, value);
}
// ===================================================================

class package : public ::google::protobuf::Message {
 public:
  package();
  virtual ~package();

  package(const package& from);

  inline package& operator=(const package& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const package& default_instance();

  void Swap(package* other);

  // implements Message ----------------------------------------------

  inline package* New() const { return New(NULL); }

  package* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const package& from);
  void MergeFrom(const package& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef package_Type Type;
  static const Type REQUEST = package_Type_REQUEST;
  static const Type RESPONSE = package_Type_RESPONSE;
  static inline bool Type_IsValid(int value) {
    return package_Type_IsValid(value);
  }
  static const Type Type_MIN =
    package_Type_Type_MIN;
  static const Type Type_MAX =
    package_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    package_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return package_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return package_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return package_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .c2s.package.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::c2s::package_Type type() const;
  void set_type(::c2s::package_Type value);

  // required int32 session = 2;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 2;
  ::google::protobuf::int32 session() const;
  void set_session(::google::protobuf::int32 value);

  // required string tag = 3;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 3;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // @@protoc_insertion_point(class_scope:c2s.package)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_tag();
  inline void clear_has_tag();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 session_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static package* default_instance_;
};
// -------------------------------------------------------------------

class account_req : public ::google::protobuf::Message {
 public:
  account_req();
  virtual ~account_req();

  account_req(const account_req& from);

  inline account_req& operator=(const account_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const account_req& default_instance();

  void Swap(account_req* other);

  // implements Message ----------------------------------------------

  inline account_req* New() const { return New(NULL); }

  account_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const account_req& from);
  void MergeFrom(const account_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(account_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:c2s.account_req)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static account_req* default_instance_;
};
// -------------------------------------------------------------------

class account_rsp : public ::google::protobuf::Message {
 public:
  account_rsp();
  virtual ~account_rsp();

  account_rsp(const account_rsp& from);

  inline account_rsp& operator=(const account_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const account_rsp& default_instance();

  void Swap(account_rsp* other);

  // implements Message ----------------------------------------------

  inline account_rsp* New() const { return New(NULL); }

  account_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const account_rsp& from);
  void MergeFrom(const account_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(account_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:c2s.account_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static account_rsp* default_instance_;
};
// -------------------------------------------------------------------

class enter_room_req : public ::google::protobuf::Message {
 public:
  enter_room_req();
  virtual ~enter_room_req();

  enter_room_req(const enter_room_req& from);

  inline enter_room_req& operator=(const enter_room_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_room_req& default_instance();

  void Swap(enter_room_req* other);

  // implements Message ----------------------------------------------

  inline enter_room_req* New() const { return New(NULL); }

  enter_room_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enter_room_req& from);
  void MergeFrom(const enter_room_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(enter_room_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rule = 1;
  bool has_rule() const;
  void clear_rule();
  static const int kRuleFieldNumber = 1;
  ::google::protobuf::int32 rule() const;
  void set_rule(::google::protobuf::int32 value);

  // required int32 mode = 2;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // required int32 scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.enter_room_req)
 private:
  inline void set_has_rule();
  inline void clear_has_rule();
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_scene();
  inline void clear_has_scene();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 rule_;
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 scene_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static enter_room_req* default_instance_;
};
// -------------------------------------------------------------------

class enter_room_rsp : public ::google::protobuf::Message {
 public:
  enter_room_rsp();
  virtual ~enter_room_rsp();

  enter_room_rsp(const enter_room_rsp& from);

  inline enter_room_rsp& operator=(const enter_room_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_room_rsp& default_instance();

  void Swap(enter_room_rsp* other);

  // implements Message ----------------------------------------------

  inline enter_room_rsp* New() const { return New(NULL); }

  enter_room_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enter_room_rsp& from);
  void MergeFrom(const enter_room_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(enter_room_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:c2s.enter_room_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static enter_room_rsp* default_instance_;
};
// -------------------------------------------------------------------

class ready_req : public ::google::protobuf::Message {
 public:
  ready_req();
  virtual ~ready_req();

  ready_req(const ready_req& from);

  inline ready_req& operator=(const ready_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ready_req& default_instance();

  void Swap(ready_req* other);

  // implements Message ----------------------------------------------

  inline ready_req* New() const { return New(NULL); }

  ready_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ready_req& from);
  void MergeFrom(const ready_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ready_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ready = 1;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 1;
  ::google::protobuf::int32 ready() const;
  void set_ready(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.ready_req)
 private:
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ready_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static ready_req* default_instance_;
};
// -------------------------------------------------------------------

class ready_rsp : public ::google::protobuf::Message {
 public:
  ready_rsp();
  virtual ~ready_rsp();

  ready_rsp(const ready_rsp& from);

  inline ready_rsp& operator=(const ready_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ready_rsp& default_instance();

  void Swap(ready_rsp* other);

  // implements Message ----------------------------------------------

  inline ready_rsp* New() const { return New(NULL); }

  ready_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ready_rsp& from);
  void MergeFrom(const ready_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ready_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // repeated int32 mcards = 4;
  int mcards_size() const;
  void clear_mcards();
  static const int kMcardsFieldNumber = 4;
  ::google::protobuf::int32 mcards(int index) const;
  void set_mcards(int index, ::google::protobuf::int32 value);
  void add_mcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mcards();

  // repeated int32 rcards = 5;
  int rcards_size() const;
  void clear_rcards();
  static const int kRcardsFieldNumber = 5;
  ::google::protobuf::int32 rcards(int index) const;
  void set_rcards(int index, ::google::protobuf::int32 value);
  void add_rcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rcards();

  // repeated int32 lcards = 6;
  int lcards_size() const;
  void clear_lcards();
  static const int kLcardsFieldNumber = 6;
  ::google::protobuf::int32 lcards(int index) const;
  void set_lcards(int index, ::google::protobuf::int32 value);
  void add_lcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcards();

  // repeated int32 dcards = 7;
  int dcards_size() const;
  void clear_dcards();
  static const int kDcardsFieldNumber = 7;
  ::google::protobuf::int32 dcards(int index) const;
  void set_dcards(int index, ::google::protobuf::int32 value);
  void add_dcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dcards();

  // @@protoc_insertion_point(class_scope:c2s.ready_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dcards_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static ready_rsp* default_instance_;
};
// -------------------------------------------------------------------

class mp_req : public ::google::protobuf::Message {
 public:
  mp_req();
  virtual ~mp_req();

  mp_req(const mp_req& from);

  inline mp_req& operator=(const mp_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mp_req& default_instance();

  void Swap(mp_req* other);

  // implements Message ----------------------------------------------

  inline mp_req* New() const { return New(NULL); }

  mp_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mp_req& from);
  void MergeFrom(const mp_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mp_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m = 1;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 1;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.mp_req)
 private:
  inline void set_has_m();
  inline void clear_has_m();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 m_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static mp_req* default_instance_;
};
// -------------------------------------------------------------------

class mp_rsp : public ::google::protobuf::Message {
 public:
  mp_rsp();
  virtual ~mp_rsp();

  mp_rsp(const mp_rsp& from);

  inline mp_rsp& operator=(const mp_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mp_rsp& default_instance();

  void Swap(mp_rsp* other);

  // implements Message ----------------------------------------------

  inline mp_rsp* New() const { return New(NULL); }

  mp_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mp_rsp& from);
  void MergeFrom(const mp_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(mp_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 m = 3;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 3;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // repeated int32 mcards = 4;
  int mcards_size() const;
  void clear_mcards();
  static const int kMcardsFieldNumber = 4;
  ::google::protobuf::int32 mcards(int index) const;
  void set_mcards(int index, ::google::protobuf::int32 value);
  void add_mcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mcards();

  // repeated int32 rcards = 5;
  int rcards_size() const;
  void clear_rcards();
  static const int kRcardsFieldNumber = 5;
  ::google::protobuf::int32 rcards(int index) const;
  void set_rcards(int index, ::google::protobuf::int32 value);
  void add_rcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rcards();

  // repeated int32 lcards = 6;
  int lcards_size() const;
  void clear_lcards();
  static const int kLcardsFieldNumber = 6;
  ::google::protobuf::int32 lcards(int index) const;
  void set_lcards(int index, ::google::protobuf::int32 value);
  void add_lcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcards();

  // repeated int32 dcards = 7;
  int dcards_size() const;
  void clear_dcards();
  static const int kDcardsFieldNumber = 7;
  ::google::protobuf::int32 dcards(int index) const;
  void set_dcards(int index, ::google::protobuf::int32 value);
  void add_dcards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dcards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dcards();

  // @@protoc_insertion_point(class_scope:c2s.mp_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_m();
  inline void clear_has_m();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 m_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcards_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dcards_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static mp_rsp* default_instance_;
};
// -------------------------------------------------------------------

class am_req : public ::google::protobuf::Message {
 public:
  am_req();
  virtual ~am_req();

  am_req(const am_req& from);

  inline am_req& operator=(const am_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const am_req& default_instance();

  void Swap(am_req* other);

  // implements Message ----------------------------------------------

  inline am_req* New() const { return New(NULL); }

  am_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const am_req& from);
  void MergeFrom(const am_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(am_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m = 1;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 1;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.am_req)
 private:
  inline void set_has_m();
  inline void clear_has_m();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 m_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static am_req* default_instance_;
};
// -------------------------------------------------------------------

class am_rsp : public ::google::protobuf::Message {
 public:
  am_rsp();
  virtual ~am_rsp();

  am_rsp(const am_rsp& from);

  inline am_rsp& operator=(const am_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const am_rsp& default_instance();

  void Swap(am_rsp* other);

  // implements Message ----------------------------------------------

  inline am_rsp* New() const { return New(NULL); }

  am_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const am_rsp& from);
  void MergeFrom(const am_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(am_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:c2s.am_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static am_rsp* default_instance_;
};
// -------------------------------------------------------------------

class rob_req : public ::google::protobuf::Message {
 public:
  rob_req();
  virtual ~rob_req();

  rob_req(const rob_req& from);

  inline rob_req& operator=(const rob_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rob_req& default_instance();

  void Swap(rob_req* other);

  // implements Message ----------------------------------------------

  inline rob_req* New() const { return New(NULL); }

  rob_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rob_req& from);
  void MergeFrom(const rob_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rob_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 m = 1;
  bool has_m() const;
  void clear_m();
  static const int kMFieldNumber = 1;
  ::google::protobuf::int32 m() const;
  void set_m(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.rob_req)
 private:
  inline void set_has_m();
  inline void clear_has_m();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 m_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static rob_req* default_instance_;
};
// -------------------------------------------------------------------

class rob_rsp : public ::google::protobuf::Message {
 public:
  rob_rsp();
  virtual ~rob_rsp();

  rob_rsp(const rob_rsp& from);

  inline rob_rsp& operator=(const rob_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rob_rsp& default_instance();

  void Swap(rob_rsp* other);

  // implements Message ----------------------------------------------

  inline rob_rsp* New() const { return New(NULL); }

  rob_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rob_rsp& from);
  void MergeFrom(const rob_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(rob_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 your_turn = 3;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 3;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // required int32 countdown = 4;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 4;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.rob_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static rob_rsp* default_instance_;
};
// -------------------------------------------------------------------

class lead_req : public ::google::protobuf::Message {
 public:
  lead_req();
  virtual ~lead_req();

  lead_req(const lead_req& from);

  inline lead_req& operator=(const lead_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const lead_req& default_instance();

  void Swap(lead_req* other);

  // implements Message ----------------------------------------------

  inline lead_req* New() const { return New(NULL); }

  lead_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lead_req& from);
  void MergeFrom(const lead_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lead_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 cards = 1;
  int cards_size() const;
  void clear_cards();
  static const int kCardsFieldNumber = 1;
  ::google::protobuf::int32 cards(int index) const;
  void set_cards(int index, ::google::protobuf::int32 value);
  void add_cards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:c2s.lead_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cards_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static lead_req* default_instance_;
};
// -------------------------------------------------------------------

class lead_rsp_settlement : public ::google::protobuf::Message {
 public:
  lead_rsp_settlement();
  virtual ~lead_rsp_settlement();

  lead_rsp_settlement(const lead_rsp_settlement& from);

  inline lead_rsp_settlement& operator=(const lead_rsp_settlement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const lead_rsp_settlement& default_instance();

  void Swap(lead_rsp_settlement* other);

  // implements Message ----------------------------------------------

  inline lead_rsp_settlement* New() const { return New(NULL); }

  lead_rsp_settlement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lead_rsp_settlement& from);
  void MergeFrom(const lead_rsp_settlement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lead_rsp_settlement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gold = 1;
  bool has_gold() const;
  void clear_gold();
  static const int kGoldFieldNumber = 1;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.lead_rsp.settlement)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 gold_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static lead_rsp_settlement* default_instance_;
};
// -------------------------------------------------------------------

class lead_rsp : public ::google::protobuf::Message {
 public:
  lead_rsp();
  virtual ~lead_rsp();

  lead_rsp(const lead_rsp& from);

  inline lead_rsp& operator=(const lead_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const lead_rsp& default_instance();

  void Swap(lead_rsp* other);

  // implements Message ----------------------------------------------

  inline lead_rsp* New() const { return New(NULL); }

  lead_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const lead_rsp& from);
  void MergeFrom(const lead_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(lead_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef lead_rsp_settlement settlement;

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // required int32 your_turn = 3;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 3;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // required int32 countdown = 4;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 4;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // optional .c2s.lead_rsp.settlement me = 5;
  bool has_me() const;
  void clear_me();
  static const int kMeFieldNumber = 5;
  const ::c2s::lead_rsp_settlement& me() const;
  ::c2s::lead_rsp_settlement* mutable_me();
  ::c2s::lead_rsp_settlement* release_me();
  void set_allocated_me(::c2s::lead_rsp_settlement* me);

  // optional .c2s.lead_rsp.settlement right = 6;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 6;
  const ::c2s::lead_rsp_settlement& right() const;
  ::c2s::lead_rsp_settlement* mutable_right();
  ::c2s::lead_rsp_settlement* release_right();
  void set_allocated_right(::c2s::lead_rsp_settlement* right);

  // optional .c2s.lead_rsp.settlement left = 7;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 7;
  const ::c2s::lead_rsp_settlement& left() const;
  ::c2s::lead_rsp_settlement* mutable_left();
  ::c2s::lead_rsp_settlement* release_left();
  void set_allocated_left(::c2s::lead_rsp_settlement* left);

  // @@protoc_insertion_point(class_scope:c2s.lead_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_me();
  inline void clear_has_me();
  inline void set_has_right();
  inline void clear_has_right();
  inline void set_has_left();
  inline void clear_has_left();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 your_turn_;
  ::c2s::lead_rsp_settlement* me_;
  ::c2s::lead_rsp_settlement* right_;
  ::c2s::lead_rsp_settlement* left_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static lead_rsp* default_instance_;
};
// -------------------------------------------------------------------

class logout_req : public ::google::protobuf::Message {
 public:
  logout_req();
  virtual ~logout_req();

  logout_req(const logout_req& from);

  inline logout_req& operator=(const logout_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const logout_req& default_instance();

  void Swap(logout_req* other);

  // implements Message ----------------------------------------------

  inline logout_req* New() const { return New(NULL); }

  logout_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const logout_req& from);
  void MergeFrom(const logout_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(logout_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.logout_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static logout_req* default_instance_;
};
// -------------------------------------------------------------------

class logout_rsp : public ::google::protobuf::Message {
 public:
  logout_rsp();
  virtual ~logout_rsp();

  logout_rsp(const logout_rsp& from);

  inline logout_rsp& operator=(const logout_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const logout_rsp& default_instance();

  void Swap(logout_rsp* other);

  // implements Message ----------------------------------------------

  inline logout_rsp* New() const { return New(NULL); }

  logout_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const logout_rsp& from);
  void MergeFrom(const logout_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(logout_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:c2s.logout_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static logout_rsp* default_instance_;
};
// -------------------------------------------------------------------

class deal_cards_req : public ::google::protobuf::Message {
 public:
  deal_cards_req();
  virtual ~deal_cards_req();

  deal_cards_req(const deal_cards_req& from);

  inline deal_cards_req& operator=(const deal_cards_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const deal_cards_req& default_instance();

  void Swap(deal_cards_req* other);

  // implements Message ----------------------------------------------

  inline deal_cards_req* New() const { return New(NULL); }

  deal_cards_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const deal_cards_req& from);
  void MergeFrom(const deal_cards_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(deal_cards_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:c2s.deal_cards_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static deal_cards_req* default_instance_;
};
// -------------------------------------------------------------------

class deal_cards_rsp : public ::google::protobuf::Message {
 public:
  deal_cards_rsp();
  virtual ~deal_cards_rsp();

  deal_cards_rsp(const deal_cards_rsp& from);

  inline deal_cards_rsp& operator=(const deal_cards_rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const deal_cards_rsp& default_instance();

  void Swap(deal_cards_rsp* other);

  // implements Message ----------------------------------------------

  inline deal_cards_rsp* New() const { return New(NULL); }

  deal_cards_rsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const deal_cards_rsp& from);
  void MergeFrom(const deal_cards_rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(deal_cards_rsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 errorcode = 1;
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorcodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // required string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 your_turn = 3;
  bool has_your_turn() const;
  void clear_your_turn();
  static const int kYourTurnFieldNumber = 3;
  ::google::protobuf::int32 your_turn() const;
  void set_your_turn(::google::protobuf::int32 value);

  // optional int32 countdown = 4;
  bool has_countdown() const;
  void clear_countdown();
  static const int kCountdownFieldNumber = 4;
  ::google::protobuf::int32 countdown() const;
  void set_countdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:c2s.deal_cards_rsp)
 private:
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_your_turn();
  inline void clear_has_your_turn();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 errorcode_;
  ::google::protobuf::int32 your_turn_;
  ::google::protobuf::int32 countdown_;
  friend void  protobuf_AddDesc_c2s_2eproto();
  friend void protobuf_AssignDesc_c2s_2eproto();
  friend void protobuf_ShutdownFile_c2s_2eproto();

  void InitAsDefaultInstance();
  static deal_cards_rsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// package

// required .c2s.package.Type type = 1;
inline bool package::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void package::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void package::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void package::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::c2s::package_Type package::type() const {
  // @@protoc_insertion_point(field_get:c2s.package.type)
  return static_cast< ::c2s::package_Type >(type_);
}
inline void package::set_type(::c2s::package_Type value) {
  assert(::c2s::package_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:c2s.package.type)
}

// required int32 session = 2;
inline bool package::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void package::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void package::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void package::clear_session() {
  session_ = 0;
  clear_has_session();
}
inline ::google::protobuf::int32 package::session() const {
  // @@protoc_insertion_point(field_get:c2s.package.session)
  return session_;
}
inline void package::set_session(::google::protobuf::int32 value) {
  set_has_session();
  session_ = value;
  // @@protoc_insertion_point(field_set:c2s.package.session)
}

// required string tag = 3;
inline bool package::has_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void package::set_has_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void package::clear_has_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void package::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
inline const ::std::string& package::tag() const {
  // @@protoc_insertion_point(field_get:c2s.package.tag)
  return tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void package::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.package.tag)
}
inline void package::set_tag(const char* value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.package.tag)
}
inline void package::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.package.tag)
}
inline ::std::string* package::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:c2s.package.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* package::release_tag() {
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void package::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:c2s.package.tag)
}

// -------------------------------------------------------------------

// account_req

// required string account = 1;
inline bool account_req::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void account_req::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void account_req::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void account_req::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& account_req::account() const {
  // @@protoc_insertion_point(field_get:c2s.account_req.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_req::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_req.account)
}
inline void account_req::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_req.account)
}
inline void account_req::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_req.account)
}
inline ::std::string* account_req::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:c2s.account_req.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_req::release_account() {
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_req::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_req.account)
}

// required string password = 2;
inline bool account_req::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void account_req::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void account_req::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void account_req::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& account_req::password() const {
  // @@protoc_insertion_point(field_get:c2s.account_req.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_req::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_req.password)
}
inline void account_req::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_req.password)
}
inline void account_req::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_req.password)
}
inline ::std::string* account_req::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:c2s.account_req.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_req::release_password() {
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_req::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_req.password)
}

// -------------------------------------------------------------------

// account_rsp

// required int32 errorcode = 1;
inline bool account_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void account_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void account_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void account_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 account_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.account_rsp.errorcode)
  return errorcode_;
}
inline void account_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.account_rsp.errorcode)
}

// required string msg = 2;
inline bool account_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void account_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void account_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void account_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& account_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.account_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.account_rsp.msg)
}
inline void account_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.account_rsp.msg)
}
inline void account_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.account_rsp.msg)
}
inline ::std::string* account_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.account_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* account_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void account_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.account_rsp.msg)
}

// -------------------------------------------------------------------

// enter_room_req

// required int32 rule = 1;
inline bool enter_room_req::has_rule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_room_req::set_has_rule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_room_req::clear_has_rule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_room_req::clear_rule() {
  rule_ = 0;
  clear_has_rule();
}
inline ::google::protobuf::int32 enter_room_req::rule() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.rule)
  return rule_;
}
inline void enter_room_req::set_rule(::google::protobuf::int32 value) {
  set_has_rule();
  rule_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.rule)
}

// required int32 mode = 2;
inline bool enter_room_req::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void enter_room_req::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void enter_room_req::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void enter_room_req::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::google::protobuf::int32 enter_room_req::mode() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.mode)
  return mode_;
}
inline void enter_room_req::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.mode)
}

// required int32 scene = 3;
inline bool enter_room_req::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void enter_room_req::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void enter_room_req::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void enter_room_req::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 enter_room_req::scene() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_req.scene)
  return scene_;
}
inline void enter_room_req::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_req.scene)
}

// -------------------------------------------------------------------

// enter_room_rsp

// required int32 errorcode = 1;
inline bool enter_room_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_room_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_room_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_room_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 enter_room_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_rsp.errorcode)
  return errorcode_;
}
inline void enter_room_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.enter_room_rsp.errorcode)
}

// required string msg = 2;
inline bool enter_room_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void enter_room_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void enter_room_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void enter_room_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& enter_room_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.enter_room_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.enter_room_rsp.msg)
}
inline void enter_room_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.enter_room_rsp.msg)
}
inline void enter_room_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.enter_room_rsp.msg)
}
inline ::std::string* enter_room_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.enter_room_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* enter_room_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void enter_room_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.enter_room_rsp.msg)
}

// -------------------------------------------------------------------

// ready_req

// required int32 ready = 1;
inline bool ready_req::has_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ready_req::set_has_ready() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ready_req::clear_has_ready() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ready_req::clear_ready() {
  ready_ = 0;
  clear_has_ready();
}
inline ::google::protobuf::int32 ready_req::ready() const {
  // @@protoc_insertion_point(field_get:c2s.ready_req.ready)
  return ready_;
}
inline void ready_req::set_ready(::google::protobuf::int32 value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_req.ready)
}

// -------------------------------------------------------------------

// ready_rsp

// required int32 errorcode = 1;
inline bool ready_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ready_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ready_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ready_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 ready_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.errorcode)
  return errorcode_;
}
inline void ready_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.errorcode)
}

// required string msg = 2;
inline bool ready_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ready_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ready_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ready_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ready_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ready_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.msg)
}
inline void ready_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.ready_rsp.msg)
}
inline void ready_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.ready_rsp.msg)
}
inline ::std::string* ready_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.ready_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ready_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ready_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.ready_rsp.msg)
}

// required int32 user_id = 3;
inline bool ready_rsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ready_rsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ready_rsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ready_rsp::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 ready_rsp::user_id() const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.user_id)
  return user_id_;
}
inline void ready_rsp::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.user_id)
}

// repeated int32 mcards = 4;
inline int ready_rsp::mcards_size() const {
  return mcards_.size();
}
inline void ready_rsp::clear_mcards() {
  mcards_.Clear();
}
inline ::google::protobuf::int32 ready_rsp::mcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.mcards)
  return mcards_.Get(index);
}
inline void ready_rsp::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.mcards)
}
inline void ready_rsp::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.mcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::mcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.mcards)
  return mcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
inline int ready_rsp::rcards_size() const {
  return rcards_.size();
}
inline void ready_rsp::clear_rcards() {
  rcards_.Clear();
}
inline ::google::protobuf::int32 ready_rsp::rcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.rcards)
  return rcards_.Get(index);
}
inline void ready_rsp::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.rcards)
}
inline void ready_rsp::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.rcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::rcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.rcards)
  return rcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
inline int ready_rsp::lcards_size() const {
  return lcards_.size();
}
inline void ready_rsp::clear_lcards() {
  lcards_.Clear();
}
inline ::google::protobuf::int32 ready_rsp::lcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.lcards)
  return lcards_.Get(index);
}
inline void ready_rsp::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.lcards)
}
inline void ready_rsp::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.lcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::lcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.lcards)
  return lcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
inline int ready_rsp::dcards_size() const {
  return dcards_.size();
}
inline void ready_rsp::clear_dcards() {
  dcards_.Clear();
}
inline ::google::protobuf::int32 ready_rsp::dcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.ready_rsp.dcards)
  return dcards_.Get(index);
}
inline void ready_rsp::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.ready_rsp.dcards)
}
inline void ready_rsp::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.ready_rsp.dcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ready_rsp::dcards() const {
  // @@protoc_insertion_point(field_list:c2s.ready_rsp.dcards)
  return dcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ready_rsp::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.ready_rsp.dcards)
  return &dcards_;
}

// -------------------------------------------------------------------

// mp_req

// required int32 m = 1;
inline bool mp_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mp_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mp_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mp_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 mp_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.mp_req.m)
  return m_;
}
inline void mp_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_req.m)
}

// -------------------------------------------------------------------

// mp_rsp

// required int32 errorcode = 1;
inline bool mp_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mp_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mp_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mp_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 mp_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.errorcode)
  return errorcode_;
}
inline void mp_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.errorcode)
}

// required string msg = 2;
inline bool mp_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mp_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mp_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mp_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& mp_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mp_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.msg)
}
inline void mp_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.mp_rsp.msg)
}
inline void mp_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.mp_rsp.msg)
}
inline ::std::string* mp_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.mp_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mp_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mp_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.mp_rsp.msg)
}

// required int32 m = 3;
inline bool mp_rsp::has_m() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mp_rsp::set_has_m() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mp_rsp::clear_has_m() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mp_rsp::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 mp_rsp::m() const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.m)
  return m_;
}
inline void mp_rsp::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.m)
}

// repeated int32 mcards = 4;
inline int mp_rsp::mcards_size() const {
  return mcards_.size();
}
inline void mp_rsp::clear_mcards() {
  mcards_.Clear();
}
inline ::google::protobuf::int32 mp_rsp::mcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.mcards)
  return mcards_.Get(index);
}
inline void mp_rsp::set_mcards(int index, ::google::protobuf::int32 value) {
  mcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.mcards)
}
inline void mp_rsp::add_mcards(::google::protobuf::int32 value) {
  mcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.mcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::mcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.mcards)
  return mcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_mcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.mcards)
  return &mcards_;
}

// repeated int32 rcards = 5;
inline int mp_rsp::rcards_size() const {
  return rcards_.size();
}
inline void mp_rsp::clear_rcards() {
  rcards_.Clear();
}
inline ::google::protobuf::int32 mp_rsp::rcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.rcards)
  return rcards_.Get(index);
}
inline void mp_rsp::set_rcards(int index, ::google::protobuf::int32 value) {
  rcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.rcards)
}
inline void mp_rsp::add_rcards(::google::protobuf::int32 value) {
  rcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.rcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::rcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.rcards)
  return rcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_rcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.rcards)
  return &rcards_;
}

// repeated int32 lcards = 6;
inline int mp_rsp::lcards_size() const {
  return lcards_.size();
}
inline void mp_rsp::clear_lcards() {
  lcards_.Clear();
}
inline ::google::protobuf::int32 mp_rsp::lcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.lcards)
  return lcards_.Get(index);
}
inline void mp_rsp::set_lcards(int index, ::google::protobuf::int32 value) {
  lcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.lcards)
}
inline void mp_rsp::add_lcards(::google::protobuf::int32 value) {
  lcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.lcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::lcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.lcards)
  return lcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_lcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.lcards)
  return &lcards_;
}

// repeated int32 dcards = 7;
inline int mp_rsp::dcards_size() const {
  return dcards_.size();
}
inline void mp_rsp::clear_dcards() {
  dcards_.Clear();
}
inline ::google::protobuf::int32 mp_rsp::dcards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.mp_rsp.dcards)
  return dcards_.Get(index);
}
inline void mp_rsp::set_dcards(int index, ::google::protobuf::int32 value) {
  dcards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.mp_rsp.dcards)
}
inline void mp_rsp::add_dcards(::google::protobuf::int32 value) {
  dcards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.mp_rsp.dcards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
mp_rsp::dcards() const {
  // @@protoc_insertion_point(field_list:c2s.mp_rsp.dcards)
  return dcards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
mp_rsp::mutable_dcards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.mp_rsp.dcards)
  return &dcards_;
}

// -------------------------------------------------------------------

// am_req

// required int32 m = 1;
inline bool am_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void am_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void am_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void am_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 am_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.am_req.m)
  return m_;
}
inline void am_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.am_req.m)
}

// -------------------------------------------------------------------

// am_rsp

// required int32 errorcode = 1;
inline bool am_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void am_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void am_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void am_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 am_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.am_rsp.errorcode)
  return errorcode_;
}
inline void am_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.am_rsp.errorcode)
}

// required string msg = 2;
inline bool am_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void am_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void am_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void am_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& am_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.am_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void am_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.am_rsp.msg)
}
inline void am_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.am_rsp.msg)
}
inline void am_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.am_rsp.msg)
}
inline ::std::string* am_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.am_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* am_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void am_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.am_rsp.msg)
}

// -------------------------------------------------------------------

// rob_req

// required int32 m = 1;
inline bool rob_req::has_m() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rob_req::set_has_m() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rob_req::clear_has_m() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rob_req::clear_m() {
  m_ = 0;
  clear_has_m();
}
inline ::google::protobuf::int32 rob_req::m() const {
  // @@protoc_insertion_point(field_get:c2s.rob_req.m)
  return m_;
}
inline void rob_req::set_m(::google::protobuf::int32 value) {
  set_has_m();
  m_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_req.m)
}

// -------------------------------------------------------------------

// rob_rsp

// required int32 errorcode = 1;
inline bool rob_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rob_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rob_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rob_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 rob_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.errorcode)
  return errorcode_;
}
inline void rob_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.errorcode)
}

// required string msg = 2;
inline bool rob_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rob_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rob_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rob_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& rob_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rob_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.msg)
}
inline void rob_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.rob_rsp.msg)
}
inline void rob_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.rob_rsp.msg)
}
inline ::std::string* rob_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.rob_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* rob_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void rob_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.rob_rsp.msg)
}

// required int32 your_turn = 3;
inline bool rob_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void rob_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void rob_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void rob_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 rob_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.your_turn)
  return your_turn_;
}
inline void rob_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.your_turn)
}

// required int32 countdown = 4;
inline bool rob_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void rob_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void rob_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void rob_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 rob_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.rob_rsp.countdown)
  return countdown_;
}
inline void rob_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.rob_rsp.countdown)
}

// -------------------------------------------------------------------

// lead_req

// repeated int32 cards = 1;
inline int lead_req::cards_size() const {
  return cards_.size();
}
inline void lead_req::clear_cards() {
  cards_.Clear();
}
inline ::google::protobuf::int32 lead_req::cards(int index) const {
  // @@protoc_insertion_point(field_get:c2s.lead_req.cards)
  return cards_.Get(index);
}
inline void lead_req::set_cards(int index, ::google::protobuf::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:c2s.lead_req.cards)
}
inline void lead_req::add_cards(::google::protobuf::int32 value) {
  cards_.Add(value);
  // @@protoc_insertion_point(field_add:c2s.lead_req.cards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
lead_req::cards() const {
  // @@protoc_insertion_point(field_list:c2s.lead_req.cards)
  return cards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
lead_req::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:c2s.lead_req.cards)
  return &cards_;
}

// -------------------------------------------------------------------

// lead_rsp_settlement

// required int32 gold = 1;
inline bool lead_rsp_settlement::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void lead_rsp_settlement::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void lead_rsp_settlement::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void lead_rsp_settlement::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 lead_rsp_settlement::gold() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.settlement.gold)
  return gold_;
}
inline void lead_rsp_settlement::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.settlement.gold)
}

// -------------------------------------------------------------------

// lead_rsp

// required int32 errorcode = 1;
inline bool lead_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void lead_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void lead_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void lead_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 lead_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.errorcode)
  return errorcode_;
}
inline void lead_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.errorcode)
}

// required string msg = 2;
inline bool lead_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void lead_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void lead_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void lead_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& lead_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lead_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.msg)
}
inline void lead_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.lead_rsp.msg)
}
inline void lead_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.lead_rsp.msg)
}
inline ::std::string* lead_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* lead_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void lead_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.msg)
}

// required int32 your_turn = 3;
inline bool lead_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void lead_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void lead_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void lead_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 lead_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.your_turn)
  return your_turn_;
}
inline void lead_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.your_turn)
}

// required int32 countdown = 4;
inline bool lead_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void lead_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void lead_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void lead_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 lead_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.countdown)
  return countdown_;
}
inline void lead_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.lead_rsp.countdown)
}

// optional .c2s.lead_rsp.settlement me = 5;
inline bool lead_rsp::has_me() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void lead_rsp::set_has_me() {
  _has_bits_[0] |= 0x00000010u;
}
inline void lead_rsp::clear_has_me() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void lead_rsp::clear_me() {
  if (me_ != NULL) me_->::c2s::lead_rsp_settlement::Clear();
  clear_has_me();
}
inline const ::c2s::lead_rsp_settlement& lead_rsp::me() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.me)
  return me_ != NULL ? *me_ : *default_instance_->me_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::mutable_me() {
  set_has_me();
  if (me_ == NULL) {
    me_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.me)
  return me_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::release_me() {
  clear_has_me();
  ::c2s::lead_rsp_settlement* temp = me_;
  me_ = NULL;
  return temp;
}
inline void lead_rsp::set_allocated_me(::c2s::lead_rsp_settlement* me) {
  delete me_;
  me_ = me;
  if (me) {
    set_has_me();
  } else {
    clear_has_me();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.me)
}

// optional .c2s.lead_rsp.settlement right = 6;
inline bool lead_rsp::has_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void lead_rsp::set_has_right() {
  _has_bits_[0] |= 0x00000020u;
}
inline void lead_rsp::clear_has_right() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void lead_rsp::clear_right() {
  if (right_ != NULL) right_->::c2s::lead_rsp_settlement::Clear();
  clear_has_right();
}
inline const ::c2s::lead_rsp_settlement& lead_rsp::right() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.right)
  return right_ != NULL ? *right_ : *default_instance_->right_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.right)
  return right_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::release_right() {
  clear_has_right();
  ::c2s::lead_rsp_settlement* temp = right_;
  right_ = NULL;
  return temp;
}
inline void lead_rsp::set_allocated_right(::c2s::lead_rsp_settlement* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.right)
}

// optional .c2s.lead_rsp.settlement left = 7;
inline bool lead_rsp::has_left() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void lead_rsp::set_has_left() {
  _has_bits_[0] |= 0x00000040u;
}
inline void lead_rsp::clear_has_left() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void lead_rsp::clear_left() {
  if (left_ != NULL) left_->::c2s::lead_rsp_settlement::Clear();
  clear_has_left();
}
inline const ::c2s::lead_rsp_settlement& lead_rsp::left() const {
  // @@protoc_insertion_point(field_get:c2s.lead_rsp.left)
  return left_ != NULL ? *left_ : *default_instance_->left_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::c2s::lead_rsp_settlement;
  }
  // @@protoc_insertion_point(field_mutable:c2s.lead_rsp.left)
  return left_;
}
inline ::c2s::lead_rsp_settlement* lead_rsp::release_left() {
  clear_has_left();
  ::c2s::lead_rsp_settlement* temp = left_;
  left_ = NULL;
  return temp;
}
inline void lead_rsp::set_allocated_left(::c2s::lead_rsp_settlement* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:c2s.lead_rsp.left)
}

// -------------------------------------------------------------------

// logout_req

// -------------------------------------------------------------------

// logout_rsp

// required int32 errorcode = 1;
inline bool logout_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void logout_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void logout_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void logout_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 logout_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.logout_rsp.errorcode)
  return errorcode_;
}
inline void logout_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.logout_rsp.errorcode)
}

// required string msg = 2;
inline bool logout_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void logout_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void logout_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void logout_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& logout_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.logout_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logout_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.logout_rsp.msg)
}
inline void logout_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.logout_rsp.msg)
}
inline void logout_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.logout_rsp.msg)
}
inline ::std::string* logout_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.logout_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* logout_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void logout_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.logout_rsp.msg)
}

// -------------------------------------------------------------------

// deal_cards_req

// -------------------------------------------------------------------

// deal_cards_rsp

// required int32 errorcode = 1;
inline bool deal_cards_rsp::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void deal_cards_rsp::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void deal_cards_rsp::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void deal_cards_rsp::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 deal_cards_rsp::errorcode() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.errorcode)
  return errorcode_;
}
inline void deal_cards_rsp::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.errorcode)
}

// required string msg = 2;
inline bool deal_cards_rsp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void deal_cards_rsp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void deal_cards_rsp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void deal_cards_rsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& deal_cards_rsp::msg() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_rsp::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.msg)
}
inline void deal_cards_rsp::set_msg(const char* value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:c2s.deal_cards_rsp.msg)
}
inline void deal_cards_rsp::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:c2s.deal_cards_rsp.msg)
}
inline ::std::string* deal_cards_rsp::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:c2s.deal_cards_rsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* deal_cards_rsp::release_msg() {
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void deal_cards_rsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:c2s.deal_cards_rsp.msg)
}

// optional int32 your_turn = 3;
inline bool deal_cards_rsp::has_your_turn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void deal_cards_rsp::set_has_your_turn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void deal_cards_rsp::clear_has_your_turn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void deal_cards_rsp::clear_your_turn() {
  your_turn_ = 0;
  clear_has_your_turn();
}
inline ::google::protobuf::int32 deal_cards_rsp::your_turn() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.your_turn)
  return your_turn_;
}
inline void deal_cards_rsp::set_your_turn(::google::protobuf::int32 value) {
  set_has_your_turn();
  your_turn_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.your_turn)
}

// optional int32 countdown = 4;
inline bool deal_cards_rsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void deal_cards_rsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void deal_cards_rsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void deal_cards_rsp::clear_countdown() {
  countdown_ = 0;
  clear_has_countdown();
}
inline ::google::protobuf::int32 deal_cards_rsp::countdown() const {
  // @@protoc_insertion_point(field_get:c2s.deal_cards_rsp.countdown)
  return countdown_;
}
inline void deal_cards_rsp::set_countdown(::google::protobuf::int32 value) {
  set_has_countdown();
  countdown_ = value;
  // @@protoc_insertion_point(field_set:c2s.deal_cards_rsp.countdown)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace c2s

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::c2s::package_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::c2s::package_Type>() {
  return ::c2s::package_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_c2s_2eproto__INCLUDED
